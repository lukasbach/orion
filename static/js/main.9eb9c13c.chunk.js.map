{"version":3,"sources":["components/PrivacyNotice.tsx","types.ts","reportWebVitals.ts","TelemetryCodes.ts","game/GameStateSerializer.ts","game/GameBoard.ts","game/BankSet.ts","game/BagSet.ts","constants.ts","telemetry.ts","game/Game.ts","components/Application.tsx","gameLevelToGameState.ts","levels/helpers.ts","levels/tutorial.ts","levels/easy.ts","levels/medium.ts","levels/hard.ts","levels/experiments.ts","level.ts","components/Dialog.tsx","components/DialogHeader.tsx","components/DialogButton.tsx","components/TopRightMenu.tsx","components/useCompletionStore.ts","components/useCachedLevelStore.ts","components/GameContainer.tsx","components/CustomTile.tsx","utils.ts","tileNames.ts","tileColors.ts","components/Tile.tsx","components/TileMatrix.tsx","components/DummyGameContainer.tsx","components/StartPage.tsx","components/PreviewIcon.tsx","components/LevelButton.tsx","gameStateToPreview.ts","components/LevelSelectionPage.tsx","components/useTutorial.ts","components/BoardUi.tsx","components/GameStats.tsx","components/BankActionButton.tsx","components/BankUi.tsx","components/BagUi.tsx","components/BagsUi.tsx","components/Tutorial.tsx","components/BoardContainer.tsx","index.tsx"],"names":["PrivacyNotice","props","useEffect","decryptCode","UnCryptMailto","s","n","r","i","length","charCodeAt","String","fromCharCode","linkTo_UnCryptMailto","location","href","eval","window","ContactUs","children","className","cxs","maxHeight","overflow","color","margin","BankAction","CurrentAction","LevelCategory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Colors","TelemetryCodes","GameStateSerializer","game","this","board","serialize","banks","bags","colors","roundNumber","points","currentAction","actioningBankId","movingTileSourcePosition","end","name","initialState","bagPresets","GameBoard","setup","state","boardSetup","tiles","boardState","row","col","exists","requiredColor","Error","undefined","getAt","tile","filter","map","rowId","colId","isFinalized","find","x","canMove","coords1","coords2","Math","abs","rightOffset","reduce","a","b","BankSet","bankSetup","bankState","bankId","count","action","placementRow","_","bid","getBank","bank","Move","canMoveAnything","Recolor","canRecolor","PlaceInRow","canPlaceInRow","getBanks","isActionAvailableInBank","BagSet","currentBag","picked","randomItem","arr","floor","random","bagPresetCounter","bag","e","aggregated","aggr","bag2","pick","getPotentialBagPicks","areTilesAddable","areTilesAddableToBank","bumpBagNumber","tilesPickedFromBag","CATEGORIES","Tutorial","Easy","Medium","Hard","win","telemetryCall","ev","localStorage","getItem","noTelemetry","GA4React","initialize","ga4","gtag","err","console","error","Page","Game","stateHasUpdated","onPushRevertableState","gameStateSerializer","forceUpdateState","prepareNextBagPick","updateState","log","serializeState","pushRevertableState","PickingBank","takeFromBag","tutorialRenderer","getSerializedState","MovingTilePickingTile","RecoloringPickingTile","PlacingTile","getPickedTiles","addToBank","checkEnd","noValidPicksLeft","areActionsAvailable","penalty","countUnpickedTiles","addPoints","removeUnpickedTile","ChoosingBankToApply","prepareNextRound","ChoosingFromBag","notEmpty","MovingTileMoving","isAdjacent","PlaceTile","actPlaceTile","actStartMovingTile","MoveTile","actCompleteMovingTile","RecolorTile","actRecolorTile","setAt","resetBank","maybeAddPointsForTileFinalization","afterBankAction","wait","Finished","isFinished","time","Animation","Promise","res","setTimeout","FinalizeTile","forEveryPoint","reshuffle","getBag","bagSize","repeat","split","getBags","bagCount","gameLevelToGameState","level","levelHelpers","A","B","C","category","TutorialLevels","messages","highlightBags","highlightBanks","highlightBankActions","highlightBoardTiles","D","bridgeBankSetup","EasyLevels","MediumLevels","HardLevels","ExperimentalLevels","Unfinished","Levels","styles","pageContainer","position","top","left","right","bottom","display","alignItems","justifyContent","backgroundColor","opacity","transition","pageContainerOpen","dialogContainer","width","height","borderRadius","flexDirection","fontSize","lineHeight","closeContainer","cursor","Dialog","cx","isOpen","cantClose","onClick","onClose","icon","faTimes","size","container","marginTop","minHeight","fontFamily","fontWeight","DialogHeader","title","DialogButton","button","padding","border","outline","marginRight","TopRightMenu","actions","id","text","LOCALSTORAGE_KEY","useCompletionStore","useState","finishedLevels","setFinishedLevels","str","JSON","parse","updateLevelCompletion","levelName","round","newVal","setItem","stringify","resetStore","clear","useCachedLevelStore","lastLevel","setLastLevel","removeItem","last","GameStateContext","React","useGame","useContext","initialGame","GameContainer","store","gameStates","useRef","setState","small","isMenuOpen","setIsMenuOpen","hasReportedEnd","setHasReportedEnd","current","push","CompleteLevel","CompleteLevelPrefix","FailLevel","FailLevelPrefix","retry","RetryLevel","RetryLevelPrefix","quit","AbortLevel","AbortLevelPrefix","Provider","value","faHistory","latestState","pop","parsed","Revert","faBars","faGrinTongueWink","backToLevelSelection","openAboutPage","faFrownOpen","activeStyles","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","backgroundClip","pointerEvents","inner","textAlign","containerGlowing","animation","containerSmall","borderWidth","innerSmall","innerActive","innerClickable","CustomTile","glowing","borderColor","Color","darken","toString","noContent","clickable","active","borderBottom","lighten","textShadow","tileNames","tileColors","dummyTileColor","Tile","matrixRow","TileMatrixRow","tileIds","style","offset","tileId","TileMatrix","setHeight","setWidth","setOffset","divRef","useCallback","node","refreshSizes","getBoundingClientRect","ResizeSensor","interval","setInterval","o","clearInterval","tilesWide","ceil","tilesTall","ref","DummyGameContainer","LEFT_WIDTH","bgContainer","flexGrow","leftBg","transform","borderRight","leftContainer","textTransform","textDecoration","marginLeft","background","metainfo","StartPage","onPlay","target","onAbout","data-color-scheme","data-size","aria-label","data-icon","onPrivacyOpen","boardRow","boardTile","PreviewIcon","bd","bk","bankSize","outer","completedInfo","LevelButton","nm","completed","faCheck","gameStateToPreview","letterSpacing","levelList","flexWrap","LevelSelectionPage","StartLevel","StartLevelPrefix","onSelect","faLongArrowAltLeft","onBack","useTutorial","tutorial","setTutorial","tut","getTutorial","rowContainer","BoardUi","tileState","tileSetup","canClickBoardTile","actClickBoardTile","includes","paddingRight","GameStats","paddingLeft","glowArrow","BankActionButton","faArrowLeft","statContainer","BankUi","isDummyBank","bankColor","arePickedAddableToBank","actChooseBank","actChooseAction","minWidth","svg","fill","svgActive","BagUi","xmlns","viewBox","bagId","d","isColorAValidPick","actChooseFromBag","nextRoundButton","marginBottom","nextRoundButtonDisabled","BagsUi","idx","forceNextRound","disabled","alignContent","boardAndBankContainer","BoardContainer","Application","component","Home","page","setPage","setLevel","aboutOpen","setAboutOpen","privacyOpen","setPrivacyOpen","LevelSelection","onContinue","InGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eb9c13c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport cxs from 'cxs';\n\nexport const PrivacyNotice: React.FC<{}> = props => {\n  useEffect(() => {\n    const decryptCode = `function UnCryptMailto(s){var n = 0;var r = \"\";for( var i = 0; i < s.length; i++){n = s.charCodeAt( i );if( n >= 8364 ){n = 128;}r += String.fromCharCode( n - 1 );}return r;}function linkTo_UnCryptMailto( s ){location.href=UnCryptMailto( s );}`;\n    eval(decryptCode);\n\n    function UnCryptMailto(s: any) {\n      let n = 0;\n      let r = \"\";\n      for (let i = 0; i < s.length; i++) {\n        n = s.charCodeAt(i);\n        if (n >= 8364) {\n          n = 128;\n        }\n        r += String.fromCharCode(n - 1);\n      }\n      return r;\n    }\n\n    function linkTo_UnCryptMailto(s: any) {\n      // eslint-disable-next-line no-restricted-globals\n      location.href=UnCryptMailto(s);\n    }\n\n    (window as any).linkTo_UnCryptMailto = linkTo_UnCryptMailto;\n  });\n\n  const ContactUs: React.FC = props => (\n    // eslint-disable-next-line no-script-url,jsx-a11y/anchor-is-valid\n    <a href=\"javascript:linkTo_UnCryptMailto('nbjmup;mcbdiApvumppl/ef');\">\n      { props.children }\n    </a>\n  );\n\n  return (\n    <div className={cxs({\n      maxHeight: '100%',\n      overflow: 'auto',\n      ' h1, h2, h3': {\n        color: 'white',\n        margin: '8px 30px 4px 30px'\n      }\n    })}>\n      <h1>PRIVACY NOTICE</h1>\n\n      <p>\n        Last updated&nbsp;December 22, 2020\n      </p>\n\n      <p>\n        Thank you for choosing to be part of our community at&nbsp;Orion&nbsp;(\"Company\", \"we\", \"us\", \"our\").\n        We are committed to protecting your personal information and your right to privacy. If you have any\n        questions or concerns about this privacy notice, or our practices with regards to your personal information,\n        please <ContactUs>contact us</ContactUs>.\n      </p>\n\n      <p>\n        When you&nbsp;use our web-based application,&nbsp;as the case may be (the \"App\")&nbsp;and more generally, use\n        any of our services (the \"Services\", which include our app https://orion.lukasbach.com), we\n        appreciate that you are trusting us with your personal information. We take your privacy very seriously.\n        In this privacy notice, we seek to explain to you in the clearest way possible what information we collect,\n        how we use it and what rights you have in relation to it. We hope you take some time to read through it\n        carefully, as it is important. If there are any terms in this privacy notice that you do not agree with,\n        please discontinue use of our Services immediately.\n      </p>\n\n      <p>\n        This privacy notice applies to all information collected through our Services (which, as described above,\n        includes our&nbsp;App and Website), as well as, any related services, sales, marketing or events.\n      </p>\n\n      <p>\n        Please read this privacy notice carefully as it will help you understand what we do with the information that we collect.\n      </p>\n\n      <h2>WHAT INFORMATION DO WE COLLECT?</h2>\n\n      <h3>Personal information you disclose to us</h3>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;We collect personal information that you provide to us.\n      </p>\n\n      <p>\n        We collect personal information that you voluntarily provide to us when you&nbsp;express an interest in\n        obtaining information about us or our products and Services, or otherwise when you contact us.\n      </p>\n\n      <p>\n        The personal information that we collect depends on the context of your interactions with us and the&nbsp;App,\n        the choices you make and the products and features you use.\n      </p>\n\n      <h3>Information automatically collected</h3>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;Some information — such as your Internet Protocol (IP) address and/or browser and device\n        characteristics — is collected automatically when you visit our&nbsp;App. When using the App, you can opt out\n        of any information being collected.\n      </p>\n\n      <p>\n        We automatically collect certain information when you visit, use or navigate the&nbsp;App. This information\n        does not reveal your specific identity (like your name or contact information) but may include device and\n        usage information, such as your IP address, browser and device characteristics, operating system, language\n        preferences, referring URLs, device name, country, location, information about how and when you use\n        our&nbsp;App&nbsp;and other technical information. This information is primarily needed to maintain the\n        security and operation of our&nbsp;App, and for our internal analytics and reporting purposes.\n      </p>\n\n      <p>\n        See below for details on how to opt out of information being collected.\n      </p>\n\n      <p>\n        Like many businesses, we also collect information through cookies and similar technologies.\n      </p>\n\n      <p>\n        The information we collect includes:<br />\n\n        <ul>\n          <li>\n            <em>Log and Usage Data.</em>&nbsp;Log and usage data is service-related, diagnostic, usage and performance\n            information our servers automatically collect when you access or use our&nbsp;App&nbsp;and which we\n            record in log files. Depending on how you interact with us, this log data may include your IP address,\n            device information, browser type and settings and information about your activity in\n            the&nbsp;App&nbsp;(such as the date/time stamps associated with your usage, pages and files viewed,\n            searches and other actions you take such as which features you use), device event information (such as\n            system activity, error reports (sometimes called 'crash dumps') and hardware settings).\n          </li>\n          <li>\n            <em>Device Data.</em>&nbsp;We collect device data such as information about your computer, phone, tablet\n            or other device you use to access the&nbsp;App. Depending on the device used, this device data may include\n            information such as your IP address (or proxy server), device and application identification numbers,\n            location, browser type, hardware model Internet service provider and/or mobile carrier, operating system\n            and system configuration information.\n          </li>\n          <li>\n            <em>Location Data.</em>&nbsp;We collect location data such as information about your device's location,\n            which can be either precise or imprecise. How much information we collect depends on the type and settings\n            of the device you use to access the&nbsp;App. For example, we may use GPS and other technologies to\n            collect geolocation data that tells us your current location (based on your IP address). You can opt out\n            of allowing us to collect this information either by refusing access to the information or by disabling\n            your Location setting on your device. Note however, if you choose to opt out, you may not be able to use\n            certain aspects of the Services.\n          </li>\n        </ul>\n      </p>\n\n      <p>\n        You can opt out of any information being collected while using the App Yana, by opening the settings of Yana,\n        opening the Tab “Advanced” and deselecting the option “Help Yana improve”.\n      </p>\n\n      <h2>HOW DO WE USE YOUR INFORMATION?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;We process your information for purposes based on legitimate business interests, the\n        fulfillment of our contract with you, compliance with our legal obligations, and/or your consent.\n      </p>\n\n      <p>\n        We use personal information collected via our&nbsp;App&nbsp;for a variety of business purposes described below.\n        We process your personal information for these purposes in reliance on our legitimate business interests, in\n        order to enter into or perform a contract with you, with your consent, and/or for compliance with our legal\n        obligations. We indicate the specific processing grounds we rely on next to each purpose listed below.\n      </p>\n\n      <p>\n        We use the information we collect or receive:<br />\n\n        <ul>\n          <li>\n            For other business purposes.&nbsp;We may use your information for other business purposes, such as data\n            analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to\n            evaluate and improve our&nbsp;App, products, marketing and your experience. We may use and store this\n            information in aggregated and anonymized form so that it is not associated with individual end users\n            and does not include personal information. We will not use identifiable personal information without\n            your consent.\n          </li>\n        </ul>\n      </p>\n\n      <h2>WILL YOUR INFORMATION BE SHARED WITH ANYONE?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp; We only share information with your consent, to comply with laws, to provide you with\n        services, to protect your rights, or to fulfill business obligations.\n      </p>\n\n      <p>\n        We may process or share your data that we hold based on the following legal basis:<br />\n\n        <ul>\n          <li>Consent:&nbsp;We may process your data if you have given us specific consent to use your personal information for a specific purpose.</li>\n          <li>Legitimate Interests:&nbsp;We may process your data when it is reasonably necessary to achieve our legitimate business interests.</li>\n          <li>Performance of a Contract:&nbsp;Where we have entered into a contract with you, we may process your personal information to fulfill the terms of our contract.</li>\n          <li>Legal Obligations:&nbsp;We may disclose your information where we are legally required to do so in order to comply with applicable law, governmental requests, a judicial proceeding, court order, or legal process, such as in response to a court order or a subpoena (including in response to public authorities to meet national security or law enforcement requirements).</li>\n          <li>Vital Interests:&nbsp;We may disclose your information where we believe it is necessary to investigate, prevent, or take action regarding potential violations of our policies, suspected fraud, situations involving potential threats to the safety of any person and illegal activities, or as evidence in litigation in which we are involved.</li>\n        </ul>\n      </p>\n\n      <p>\n        More specifically, we may need to process your data or share your personal information in the following\n        situations:<br />\n\n        <ul>\n          <li>Business Transfers.&nbsp;We may share or transfer your information in connection with, or during negotiations of, any merger, sale of company assets, financing, or acquisition of all or a portion of our business to another company.</li>\n          <li>Vendors, Consultants and Other Third-Party Service Providers.&nbsp;We may share your data with third-party vendors, service providers, contractors or agents who perform services for us or on our behalf and require access to such information to do that work. Examples include: payment processing, data analysis, email delivery, hosting services, customer service and marketing efforts. We may allow selected third parties to use tracking technology on the&nbsp;App, which will enable them to collect data on our behalf about how you interact with our&nbsp;App&nbsp;over time. This information may be used to, among other things, analyze and track data, determine the popularity of certain content, pages or features, and better understand online activity. Unless described in this notice, we do not share, sell, rent or trade any of your information with third parties for their promotional purposes.&nbsp;We have contracts in place with our data processors, which are designed to help safeguard your personal information. This means that they cannot do anything with your personal information unless we have instructed them to do it. They will also not share your personal information with any organization apart from us. They also commit to protect the data they hold on our behalf and to retain it for the period we instruct.</li>\n        </ul>\n      </p>\n\n      <h2>WHO WILL YOUR INFORMATION BE SHARED WITH?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp; We only share information with the following third parties.\n      </p>\n\n      <p>\n        We only share and disclose your information with the following third parties. We have categorized each party\n        so that you may be easily understand the purpose of our data collection and processing practices. If we have\n        processed your data based on your consent and you wish to revoke your consent, please contact us using the\n        contact details provided in the section below titled \"HOW CAN YOU CONTACT US ABOUT THIS NOTICE?\".\n      </p>\n\n      <p>\n        <ul>\n          <li>\n            Web and Mobile Analytics\n            <br />\n            Google Analytics\n          </li>\n        </ul>\n      </p>\n\n      <h2>DO WE USE COOKIES AND OTHER TRACKING TECHNOLOGIES?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;We may use cookies and other tracking technologies to collect and store your\n        information.\n      </p>\n\n      <p>\n        We may use cookies and similar tracking technologies (like web beacons and pixels) to access or store\n        information. Specific information about how we use such technologies and how you can refuse certain cookies\n        is set out in our Cookie Notice.\n      </p>\n\n      <h2>HOW LONG DO WE KEEP YOUR INFORMATION?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;We keep your information for as long as necessary to fulfill the purposes outlined in\n        this privacy notice unless otherwise required by law.\n      </p>\n\n      <p>\n        We will only keep your personal information for as long as it is necessary for the purposes set out in this\n        privacy notice, unless a longer retention period is required or permitted by law (such as tax, accounting or\n        other legal requirements). No purpose in this notice will require us keeping your personal information for\n        longer than&nbsp;90 days.\n      </p>\n\n      <p>\n        When we have no ongoing legitimate business need to process your personal information, we will either delete\n        or anonymize such information, or, if this is not possible (for example, because your personal information\n        has been stored in backup archives), then we will securely store your personal information and isolate it\n        from any further processing until deletion is possible.\n      </p>\n\n      <h2>HOW DO WE KEEP YOUR INFORMATION SAFE?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;We aim to protect your personal information through a system of organizational\n        and technical security measures.\n      </p>\n\n      <p>\n        We have implemented appropriate technical and organizational security measures designed to protect the\n        security of any personal information we process. However, despite our safeguards and efforts to secure your\n        information, no electronic transmission over the Internet or information storage technology can be guaranteed\n        to be 100% secure, so we cannot promise or guarantee that hackers, cybercriminals, or other unauthorized third\n        parties will not be able to defeat our security, and improperly collect, access, steal, or modify your\n        information. Although we will do our best to protect your personal information, transmission of personal\n        information to and from our&nbsp;App&nbsp;is at your own risk. You should only access the&nbsp;App&nbsp;within\n        a secure environment.\n      </p>\n\n      <h2>WHAT ARE YOUR PRIVACY RIGHTS?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;In some regions, such as the European Economic Area, you have rights that\n        allow you greater access to and control over your personal information.&nbsp;You may review, change, or\n        terminate your account at any time.\n      </p>\n\n      <p>\n        In some regions (like the European Economic Area), you have certain rights under applicable data protection\n        laws. These may include the right (i) to request access and obtain a copy of your personal information,\n        (ii) to request rectification or erasure; (iii) to restrict the processing of your personal information;\n        and (iv) if applicable, to data portability. In certain circumstances, you may also have the right to\n        object to the processing of your personal information. To make such a request, please use the&nbsp;contact\n        details&nbsp;provided below. We will consider and act upon any request in accordance with applicable data\n        protection laws.\n      </p>\n\n      <p>\n        If we are relying on your consent to process your personal information, you have the right to withdraw your\n        consent at any time. Please note however that this will not affect the lawfulness of the processing before\n        its withdrawal, nor will it affect the processing of your personal information conducted in reliance on\n        lawful processing grounds other than consent.\n      </p>\n\n      <p>\n        If you are a resident in the European Economic Area and you believe we are unlawfully processing your\n        personal information, you also have the right to complain to your local data protection supervisory\n        authority. You can find their contact details here:&nbsp;\n        <a href=\"http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm\">http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm</a>.\n      </p>\n\n      <p>\n        If you are a resident in Switzerland, the contact details for the data protection authorities are available\n        here:&nbsp;<a href=\"https://www.edoeb.admin.ch/edoeb/en/home.html\">https://www.edoeb.admin.ch/edoeb/en/home.html</a>.\n      </p>\n\n      <p>\n        <em>Cookies and similar technologies:</em>&nbsp;Most Web browsers are set to accept cookies by default.\n        If you prefer, you can usually choose to set your browser to remove cookies and to reject cookies. If you\n        choose to remove cookies or reject cookies, this could affect certain features or services of our&nbsp;App.\n        To opt-out of interest-based advertising by advertisers on\n        our&nbsp;App&nbsp;visit&nbsp;http://www.aboutads.info/choices/.\n        When using the Desktop app, you can manually opt-out by following these steps:\n      </p>\n\n      <p>\n        You can opt out of any information being collected while using the App Yana, by opening the settings of Yana,\n        opening the Tab “Advanced” and deselecting the option “Help Yana improve”.\n      </p>\n\n      <h2>CONTROLS FOR DO-NOT-TRACK FEATURES</h2>\n\n      <p>\n        Most web browsers and some mobile operating systems and mobile applications include a Do-Not-Track (\"DNT\")\n        feature or setting you can activate to signal your privacy preference not to have data about your online\n        browsing activities monitored and collected. At this stage no uniform technology standard for recognizing\n        and implementing DNT signals has been finalized. As such, we do not currently respond to DNT browser\n        signals or any other mechanism that automatically communicates your choice not to be tracked online. If a\n        standard for online tracking is adopted that we must follow in the future, we will inform you about that\n        practice in a revised version of this privacy notice.\n      </p>\n\n      <h2>DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?</h2>\n\n      <p>\n        In Short:&nbsp;&nbsp;Yes, if you are a resident of California, you are granted specific rights regarding\n        access to your personal information.\n      </p>\n\n      <p>\n        California Civil Code Section 1798.83, also known as the \"Shine The Light\" law, permits our users who are\n        California residents to request and obtain from us, once a year and free of charge, information about\n        categories of personal information (if any) we disclosed to third parties for direct marketing purposes\n        and the names and addresses of all third parties with which we shared personal information in the immediately\n        preceding calendar year. If you are a California resident and would like to make such a request, please submit\n        your request in writing to us using the contact information provided below.\n      </p>\n\n      <p>\n        If you are under 18 years of age, reside in California, and have a registered account with&nbsp;the App,\n        you have the right to request removal of unwanted data that you publicly post on the&nbsp;App. To request\n        removal of such data, please contact us using the contact information provided below, and include the email\n        address associated with your account and a statement that you reside in California. We will make sure the\n        data is not publicly displayed on the&nbsp;App, but please be aware that the data may not be completely or\n        comprehensively removed from all our systems (e.g. backups, etc.).\n      </p>\n\n      <h2>DO WE MAKE UPDATES TO THIS NOTICE?</h2>\n\n      <p>\n        <em>In Short:</em>&nbsp;&nbsp;Yes, we will update this notice as necessary to stay compliant with relevant laws.\n      </p>\n\n      <p>\n        We may update this privacy notice from time to time. The updated version will be indicated by an updated\n        \"Revised\" date and the updated version will be effective as soon as it is accessible. If we make material\n        changes to this privacy notice, we may notify you either by prominently posting a notice of such changes\n        or by directly sending you a notification. We encourage you to review this privacy notice frequently to be\n        informed of how we are protecting your information.\n      </p>\n\n      <h2>HOW CAN YOU CONTACT US ABOUT THIS NOTICE?</h2>\n\n      <p>\n        If you have questions or comments about this notice, <ContactUs>you may email us</ContactUs> or contact us\n        by post to:\n      </p>\n\n      <p>\n        Lukas Bach<br />\n        Kaiserstraße 186<br />\n        76133 Karlsruhe<br />\n        Germany\n      </p>\n\n      <h2>HOW CAN YOU REVIEW, UPDATE, OR DELETE THE DATA WE COLLECT FROM YOU?</h2>\n\n      <p>\n        Based on the applicable laws of your country, you may have the right to request access to the personal\n        information we collect from you, change that information, or delete it in some circumstances. To request to\n        review, update, or delete your personal information, please <ContactUs>contact us</ContactUs>.\n        We will respond to your request within 30 days.\n      </p>\n\n      <p>\n        This privacy policy was created using&nbsp;Termly’s Privacy Policy Generator.\n      </p>\n    </div>\n  );\n};\n","import { Game } from './game/Game';\n\nexport type TileColor = 0 | 1 | 2 | 3 | 4 | 5;\nexport const Colors: TileColor[] = [0, 1, 2, 3, 4, 5];\n\nexport interface IndividualBankState {\n  color?: TileColor;\n  count: number;\n}\n\nexport interface BankState {\n  banks: IndividualBankState[];\n}\n\nexport enum BankAction {\n  Move = 'move',\n  Recolor = 'recolor',\n  PlaceInRow = 'place_in_row',\n}\n\nexport interface IndividualBankSetup {\n  tiles: number;\n  action: BankAction;\n  placementRow?: number;\n}\n\nexport interface BankSetup {\n  banks: IndividualBankSetup[];\n}\n\nexport interface BoardTileSetup {\n  requiredColor?: TileColor;\n}\n\nexport interface BoardSetup {\n  tiles: Array<Array<BoardTileSetup | null>>;\n  rightOffset: number;\n}\n\nexport interface BoardTileState {\n  color?: TileColor;\n}\n\nexport interface BoardState {\n  tiles: Array<Array<BoardTileState | null>>;\n}\n\nexport interface BagState {\n  tiles: Array<TileColor | null>;\n}\n\nexport enum CurrentAction {\n  ChoosingFromBag,\n  PickingBank,\n  PlacingTile,\n  MovingTilePickingTile,\n  MovingTileMoving,\n  RecoloringPickingTile,\n  ChoosingBankToApply,\n  Animation,\n  Finished\n}\n\nexport type BagNumber = number | 'remainings';\n\nexport type TutorialRenderData = {\n  messages: string[];\n  highlightBags?: number[][];\n  highlightBoardTiles?: number[][];\n  highlightBanks?: number[][];\n  highlightBankActions?: number[];\n}\n\nexport type TutorialRenderer = undefined | ((state: GameState) => TutorialRenderData | undefined);\n\nexport interface GameState {\n  name?: string;\n  boardSetup: BoardSetup;\n  boardState: BoardState;\n  bankSetup: BankSetup;\n  bankState: BankState;\n  bags: BagState[];\n  colors: TileColor[];\n  currentBag: BagNumber;\n  roundNumber: number;\n  points: number;\n  currentAction: CurrentAction;\n  tilesPickedFromBag?: { // TODO remove\n    color: TileColor;\n    count: number;\n  };\n  movingTileSourcePosition?: [number, number];\n  actioningBankId?: number;\n  placingTileColor?: TileColor;\n  end?: 'won' | 'lost';\n  bagPresets?: TileColor[][][];\n  bagPresetCounter?: number;\n  tutorialRenderer?: TutorialRenderer;\n}\n\nexport enum LevelCategory {\n  Tutorial,\n  Easy,\n  Medium,\n  Hard,\n  Unfinished,\n  TooHard,\n  Undoable,\n  NotEntertaining,\n  Uncategorized\n}\n\nexport type GameLevel = Pick<GameState, 'boardSetup' | 'bankSetup' | 'points' | 'colors'> & {\n  bagCount: number,\n  bagSize: number,\n  name: string,\n  category?: LevelCategory,\n  bagPresets?: TileColor[][][],\n  tutorialRenderer?: TutorialRenderer,\n};\n\nexport interface LevelPreview {\n  bd: Array<Array<TileColor | 9>>,\n  bk: Array<number>,\n  nm: string,\n}\n\n//export type Mutation = (...params: any[]) => InitiatedUpdateAction;\nexport type InitiatedUpdateAction = (oldState: GameState) => GameState;\n\nexport interface GameStateContextValue {\n  state: Readonly<GameState>,\n  game: Game,\n  small: boolean,\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export enum TelemetryCodes {\n  StartLevelPrefix = 'start-level-',\n  CompleteLevelPrefix = 'complete-level-',\n  AbortLevelPrefix = 'abort-level-',\n  FailLevelPrefix = 'fail-level-',\n  RetryLevelPrefix = 'retry-level-',\n  StartLevel = 'start-level-',\n  CompleteLevel = 'complete-level-',\n  AbortLevel = 'abort-level-',\n  FailLevel = 'fail-level-',\n  RetryLevel = 'retry-level-',\n  Revert = 'revert',\n  PlaceTile = 'place-tile',\n  RecolorTile = 'recolor-tile',\n  MoveTile = 'move-tile',\n  FinalizeTile = 'finalize-tile',\n};\n","import { Game } from './Game';\nimport { GameState } from '../types';\n\nexport class GameStateSerializer {\n  constructor(private game: Game) {\n  }\n\n  public serializeState(): GameState {\n    return {\n      ...this.game.board.serialize(),\n      ...this.game.banks.serialize(),\n      ...this.game.bags.serialize(),\n      colors: this.game.colors,\n      roundNumber: this.game.roundNumber,\n      points: this.game.points,\n      currentAction: this.game.currentAction,\n      actioningBankId: this.game.actioningBankId,\n      movingTileSourcePosition: this.game.movingTileSourcePosition,\n      end: this.game.end,\n      name: this.game.initialState.name,\n      bagPresets: this.game.initialState.bagPresets,\n    };\n  }\n}","import { BoardSetup, BoardState, BoardTileSetup, BoardTileState, GameState, TileColor } from '../types';\nimport { Game } from './Game';\nimport { POINTS_FOR_TILE_FINALIZATION } from '../constants';\n\nexport class GameBoard {\n  private setup: Array<Array<BoardTileSetup | null>>;\n  private state: Array<Array<BoardTileState | null>>;\n\n  constructor(\n    private game: Game,\n    private initialState: GameState\n  ) {\n    this.setup = initialState.boardSetup.tiles;\n    this.state = initialState.boardState.tiles;\n  }\n\n  public getAt(row: number, col: number) {\n    if (this.exists(row, col)) {\n      return {\n        requiredColor: this.setup[row][col]?.requiredColor,\n        color: this.state[row][col]?.color\n      };\n    }\n    return null;\n  }\n\n  public setAt(row: number, col: number, color: TileColor | undefined) {\n    if (!this.exists(row, col)) {\n      throw Error(`No tile at ${row},${col}`);\n    }\n    this.state[row][col]!.color = color;\n  }\n\n  public notEmpty(row: number, col: number) {\n    return (this.getAt(row, col)?.color ?? undefined) !== undefined;\n  }\n\n  public isFinalized(row: number, col: number) {\n    const tile = this.getAt(row, col);\n    return tile !== undefined && tile !== null && tile.color === tile.requiredColor;\n  }\n\n  public canPlaceInRow(row: number) {\n    return this.state[row].filter((tile, col) => !!tile && this.exists(row, col) && tile.color === undefined).length > 0;\n  }\n\n  private exists(row: number, col: number) {\n    return row >= 0 && col >= 0 && !!this.setup[row]?.[col];\n  }\n\n  public canRecolor() {\n    return !!this.state.map((row, rowId) =>\n      row.filter((tile, colId) =>\n        tile?.color !== undefined && !this.isFinalized(rowId, colId)).length > 0)\n      .find(x => x);\n  }\n\n  public canMoveAnything() {\n    return this.state.filter((row, rowId) =>\n      row.filter((tile, colId) => this.canMove(rowId, colId)).length > 0\n    ).length > 0;\n  }\n\n  public canMove(row: number, col: number) {\n    return (\n      this.exists(row, col) && this.state[row][col]?.color !== undefined && !this.isFinalized(row, col) && (\n        (this.exists(row + 0, col - 1) && this.state[row + 0][col - 1]?.color === undefined) ||\n        (this.exists(row + 0, col + 0) && this.state[row + 0][col + 0]?.color === undefined) ||\n        (this.exists(row + 0, col + 1) && this.state[row + 0][col + 1]?.color === undefined) ||\n        (this.exists(row - 1, col - 1) && this.state[row - 1][col - 1]?.color === undefined) ||\n        (this.exists(row - 1, col + 0) && this.state[row - 1][col + 0]?.color === undefined) ||\n        (this.exists(row - 1, col + 1) && this.state[row - 1][col + 1]?.color === undefined) ||\n        (this.exists(row + 1, col - 1) && this.state[row + 1][col - 1]?.color === undefined) ||\n        (this.exists(row + 1, col + 0) && this.state[row + 1][col + 0]?.color === undefined) ||\n        (this.exists(row + 1, col + 1) && this.state[row + 1][col + 1]?.color === undefined)\n      )\n    );\n  }\n\n  public isAdjacent(coords1: [number, number], coords2: [number, number]) {\n    return (\n      Math.abs(coords1[0] - coords2[0]) <= 1 &&\n      Math.abs(coords1[1] - coords2[1]) <= 1\n    );\n  }\n\n  public serialize() {\n    const boardSetup: BoardSetup = {\n      tiles: this.setup,\n      rightOffset: this.initialState.boardSetup.rightOffset,\n    };\n\n    const boardState: BoardState = {\n      tiles: this.state,\n    };\n\n    return { boardSetup, boardState };\n  }\n\n  public isFinished() {\n    return this.state\n      .map((row, rowId) => (\n        row.map((tile, colId) => (\n          !this.exists(rowId, colId) || this.isFinalized(rowId, colId)\n        )).reduce((a, b) => a && b, true)\n      )).reduce((a, b) => a && b, true);\n  }\n}","import { Game } from './Game';\nimport {\n  BankAction,\n  BankSetup,\n  BankState,\n  GameState,\n  IndividualBankSetup,\n  IndividualBankState, TileColor,\n} from '../types';\n\nexport class BankSet {\n  private setup: IndividualBankSetup[];\n  private state: IndividualBankState[];\n\n  constructor(\n    private game: Game,\n    private initialState: GameState\n  ) {\n    this.setup = initialState.bankSetup.banks;\n    this.state = initialState.bankState.banks;\n  }\n\n  public addToBank(bankId: number, color: TileColor, count: number) {\n    const state = this.state[bankId];\n\n    if (state.color !== undefined && state.color !== color) {\n      throw Error(`Unmatched color when adding to bank, ${state.color} != ${color}`);\n    }\n\n    this.state[bankId] = { color, count: state.count + count };\n  }\n\n  public resetBank(bankId: number) {\n    this.state[bankId] = { color: undefined, count: 0 };\n  }\n\n  public getBank(bankId: number) {\n    const setup = this.setup[bankId];\n    const state = this.state[bankId];\n    return {\n      tiles: setup.tiles,\n      action: setup.action,\n      placementRow: setup.placementRow,\n      color: state.color,\n      count: state.count,\n    };\n  }\n\n  public getBanks() {\n    return this.setup.map((_, bid) => this.getBank(bid));\n  }\n\n  public isActionAvailableInBank(bankId: number) {\n    const bank = this.getBank(bankId);\n\n    if (bank.tiles === 0) {\n      return false;\n    }\n\n    if (bank.count < bank.tiles) {\n      return false;\n    }\n\n    switch (bank.action) {\n      case BankAction.Move:\n        return this.game.board.canMoveAnything();\n      case BankAction.Recolor:\n        return this.game.board.canRecolor();\n      case BankAction.PlaceInRow:\n        return this.game.board.canPlaceInRow(bank.placementRow!);\n    }\n\n    return true;\n  }\n\n  public areActionsAvailable() {\n    return this.getBanks()\n      .filter((bank, bankId) => {\n        return this.isActionAvailableInBank(bankId);\n      })\n      .length > 0;\n  }\n\n  public areTilesAddableToBank(bankId: number, color: TileColor, count: number) {\n    const bank = this.getBank(bankId);\n    return !!bank && (bank.color === color || bank.color === undefined) && bank.tiles - bank.count >= count;\n  }\n\n  public areTilesAddable(color: TileColor, count: number) {\n    return this.getBanks()\n      .filter(bank => (bank.color === color || bank.color === undefined) && bank.tiles - bank.count >= count)\n      .length > 0;\n  }\n\n  public serialize() {\n    const bankSetup: BankSetup = {\n      banks: this.setup\n    };\n\n    const bankState: BankState = {\n      banks: this.state,\n    };\n\n    return { bankSetup, bankState };\n  }\n}","import { Game } from './Game';\nimport { BagNumber, BagState, Colors, GameState, TileColor } from '../types';\n\nexport class BagSet {\n  private bags: BagState[];\n  public currentBag: BagNumber;\n  private picked?: {\n    color: TileColor;\n    count: number;\n  };\n  private randomItem = <T>(arr: T[]) => arr[Math.floor(Math.random() * arr.length)];\n  private bagPresetCounter;\n\n  constructor(\n    private game: Game,\n    private initialState: GameState,\n  ) {\n    this.bags = initialState.bags;\n    this.currentBag = initialState.currentBag;\n    this.bagPresetCounter = initialState.bagPresetCounter ?? 0;\n    if (initialState.bagPresets) {\n      this.bags = initialState.bagPresets[0].map(tiles => ({ tiles }));\n    }\n  }\n\n  public countUnpickedTiles() {\n    return (this.currentBag === 'remainings' ? this.bags : [this.bags[this.currentBag]])\n      .map(bag => bag.tiles.filter(tile => tile !== null))\n      .reduce((a, b) => [...a, ...b], [])\n      .length;\n  }\n\n  public async removeUnpickedTile() {\n    if (this.currentBag === 'remainings') {\n      for (const bag of this.bags) {\n        for (let i = 0; i < bag.tiles.length; i++) {\n          if (bag.tiles[i] !== null) {\n            bag.tiles[i] = null;\n            return;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < this.bags[this.currentBag].tiles.length; i++) {\n        if (this.bags[this.currentBag].tiles[i] !== null) {\n          this.bags[this.currentBag].tiles[i] = null;\n          return;\n        }\n      }\n    }\n  }\n\n  private getPotentialBagPicks(): Array<{ color: TileColor, count: number }> {\n    if (this.currentBag === 'remainings') {\n      const aggregated: BagState = {\n        tiles: this.bags.reduce<Array<TileColor | null>>((aggr, bag2) => [...aggr, ...bag2.tiles], [])\n      };\n      return Colors\n        .map(color => ({\n          count: aggregated.tiles.filter(tile => tile === color).length,\n          color\n        }))\n        .filter(pick => pick.count > 0);\n    } else {\n      return Colors\n        .map(color => ({\n          count: this.bags[this.currentBag as number].tiles.filter(tile => tile === color).length,\n          color\n        }))\n        .filter(pick => pick.count > 0);\n    }\n  }\n\n  public isColorAValidPick(color: TileColor) {\n    const pick = this.getPotentialBagPicks().find(pick => pick.color === color);\n\n    if (!pick) {\n      return false;\n    }\n\n    return this.game.banks.areTilesAddable(color, pick.count);\n  }\n\n  public arePickedAddableToBank(bankId: number) {\n    if (!this.picked) {\n      return false;\n    }\n    return this.game.banks.areTilesAddableToBank(bankId, this.picked.color, this.picked.count);\n  }\n\n  public noValidPicksLeft() {\n    const pickSupportedByBanks = this.getPotentialBagPicks()\n      .filter(pick => this.game.banks.areTilesAddable(pick.color, pick.count))\n      .length > 0;\n\n    return !pickSupportedByBanks;\n  }\n\n  public reshuffle() {\n    if (this.initialState.bagPresets) {\n      this.bags = this.initialState.bagPresets[(++this.bagPresetCounter) % this.initialState.bagPresets.length].map(tiles => ({ tiles }));\n    } else {\n      this.bags = this.bags.map(bag => ({ tiles: bag.tiles.map(tile => this.randomItem(this.initialState.colors)) }));\n    }\n    this.currentBag = 0;\n  }\n\n  public takeFromBag(color: TileColor) {\n    let count = 0;\n    if (this.currentBag === 'remainings') {\n      this.bags = this.bags\n        .map(bag => ({\n          tiles: bag.tiles.map(tile => {\n            if (tile === color) {\n              count++;\n              return null;\n            } else {\n              return tile;\n            }\n          })\n        }));\n    } else {\n      this.bags[this.currentBag].tiles = this.bags[this.currentBag].tiles\n        .map(tile => {\n          if (tile === color) {\n            count++;\n            return null;\n          } else {\n            return tile;\n          }\n        });\n    }\n    this.bumpBagNumber();\n    this.picked = {\n      count,\n      color\n    };\n  }\n\n  public getPickedTiles() {\n    return this.picked;\n  }\n\n  public bumpBagNumber() {\n    if (this.currentBag === 'remainings') {\n      return;\n    }\n    this.currentBag = this.currentBag + 1;\n    if (this.currentBag >= this.bags.length) {\n      this.currentBag = 'remainings';\n    }\n  }\n\n  public serialize() {\n    return {\n      bags: this.bags,\n      currentBag: this.currentBag,\n      tilesPickedFromBag: this.picked,\n      bagPresetCounter: this.bagPresetCounter\n    };\n  }\n}","import { LevelCategory } from './types';\n\nexport const POINTS_FOR_TILE_FINALIZATION = 3;\nexport const CATEGORIES: LevelCategory[] = [\n  LevelCategory.Tutorial, LevelCategory.Easy, LevelCategory.Medium, LevelCategory.Hard,\n];","import GA4React from 'ga-4-react';\n\nconst win = window as any;\n\nlet telemetryCall = (ev: string) => {};\n\nif (!localStorage.getItem(\"no-telemetry\") && !win.noTelemetry) {\n  const ga4react = new GA4React('G-4B5ECK8F6Z');\n  ga4react.initialize().then((ga4) => {\n    ga4.gtag('event', 'init');\n    telemetryCall = (ev: string) => {\n      ga4.gtag('event', ev,)\n    };\n  },(err) => {\n    console.error(err)\n  });\n}\n\nexport { telemetryCall };\n","import { GameStateSerializer } from './GameStateSerializer';\nimport { BankAction, CurrentAction, GameState, TileColor } from '../types';\nimport { GameBoard } from './GameBoard';\nimport { BankSet } from './BankSet';\nimport { BagSet } from './BagSet';\nimport { POINTS_FOR_TILE_FINALIZATION } from '../constants';\nimport { telemetryCall } from '../telemetry';\nimport { TelemetryCodes } from '../TelemetryCodes';\n\nexport class Game {\n  public gameStateSerializer: GameStateSerializer;\n  public board!: GameBoard;\n  public banks!: BankSet;\n  public bags!: BagSet;\n  public colors!: TileColor[];\n  public roundNumber!: number;\n  public points!: number;\n  public currentAction!: CurrentAction;\n  public actioningBankId?: number;\n  public movingTileSourcePosition?: [number, number];\n  public end?: 'won' | 'lost';\n\n  constructor(\n    private stateHasUpdated: (state: GameState) => void,\n    public initialState: GameState,\n    private onPushRevertableState?: (state: GameState) => void,\n  ) {\n    this.gameStateSerializer = new GameStateSerializer(this);\n    this.forceUpdateState(initialState);\n    this.prepareNextBagPick().then(() => this.updateState()); // TODO doesnt work\n    this.updateState();\n    console.log(\"Init\", this);\n\n    (window as any).game = this;\n  }\n\n  public forceUpdateState(state: GameState) {\n    this.board = new GameBoard(this, state);\n    this.banks = new BankSet(this, state);\n    this.bags = new BagSet(this, state);\n    this.colors = state.colors;\n    this.roundNumber = state.roundNumber;\n    this.points = state.points;\n    this.currentAction = state.currentAction;\n    this.actioningBankId = state.actioningBankId;\n    this.movingTileSourcePosition = state.movingTileSourcePosition;\n    this.end = undefined;\n  }\n\n  public getSerializedState() {\n    return this.gameStateSerializer.serializeState();\n  }\n\n  public async actChooseFromBag(color: TileColor) {\n    this.pushRevertableState();\n    this.currentAction = CurrentAction.PickingBank;\n    this.bags.takeFromBag(color);\n    this.updateState();\n  }\n\n  public getTutorial() {\n    return this.initialState.tutorialRenderer?.(this.getSerializedState());\n  }\n\n  public async actChooseAction(bankId: number) {\n    this.pushRevertableState();\n    const bank = this.banks.getBank(bankId);\n    this.actioningBankId = bankId;\n    switch (bank.action) {\n      case BankAction.Move:\n        this.currentAction = CurrentAction.MovingTilePickingTile;\n        break;\n      case BankAction.Recolor:\n        this.currentAction = CurrentAction.RecoloringPickingTile;\n        break;\n      case BankAction.PlaceInRow:\n        this.currentAction = CurrentAction.PlacingTile;\n        break;\n    }\n    this.updateState();\n  }\n\n  public async actChooseBank(bankId: number) {\n    // this.pushRevertableState();\n    const picked = this.bags.getPickedTiles();\n\n    if (!picked) {\n      throw Error('Nothing picked, cannot choose bank');\n    }\n\n    this.banks.addToBank(bankId, picked.color, picked.count);\n\n    await this.prepareNextBagPick();\n    this.updateState();\n    await this.checkEnd();\n  }\n\n  private async prepareNextBagPick() {\n    console.log(\"PREPARE NEXT BAG\", this.bags.noValidPicksLeft(), this.banks.areActionsAvailable())\n    if (/*this.bags.currentBag === 'remainings' && */this.bags.noValidPicksLeft()) {\n      const penalty = this.bags.countUnpickedTiles();\n      await this.addPoints(-penalty, undefined, () => this.bags.removeUnpickedTile());\n      if (this.points < 0) {\n        return;\n      }\n      if (this.bags.currentBag === 'remainings') {\n        if (this.banks.areActionsAvailable()) {\n          this.currentAction = CurrentAction.ChoosingBankToApply;\n        } else {\n          await this.prepareNextRound();\n        }\n      } else {\n        this.bags.bumpBagNumber();\n        await this.prepareNextBagPick();\n      }\n\n    } else {\n      this.currentAction = CurrentAction.ChoosingFromBag;\n    }\n  }\n\n  public canClickBoardTile(row: number, col: number, action?: CurrentAction) {\n    action = action ?? this.currentAction;\n    switch (action) {\n      case CurrentAction.PlacingTile:\n        return (\n          !this.board.notEmpty(row, col) &&\n          this.actioningBankId !== undefined &&\n          row === this.banks.getBank(this.actioningBankId).placementRow\n        );\n      case CurrentAction.MovingTilePickingTile:\n        return (\n          this.board.notEmpty(row, col) &&\n          this.board.canMove(row, col) &&\n          !this.board.isFinalized(row, col)\n        );\n      case CurrentAction.MovingTileMoving:\n        return (\n          !!this.movingTileSourcePosition &&\n          !this.board.notEmpty(row, col) &&\n          this.board.isAdjacent([row, col], this.movingTileSourcePosition)\n        );\n      case CurrentAction.RecoloringPickingTile:\n        return (\n          this.board.notEmpty(row, col) &&\n          !this.board.isFinalized(row, col)\n        );\n      default:\n        return false;\n    }\n  }\n\n  public async actClickBoardTile(row: number, col: number) {\n    // this.pushRevertableState();\n    switch (this.currentAction) {\n      case CurrentAction.PlacingTile:\n        telemetryCall(TelemetryCodes.PlaceTile);\n        await this.actPlaceTile(row, col);\n        break;\n      case CurrentAction.MovingTilePickingTile:\n        await this.actStartMovingTile(row, col);\n        break;\n      case CurrentAction.MovingTileMoving:\n        telemetryCall(TelemetryCodes.MoveTile);\n        await this.actCompleteMovingTile(row, col);\n        break;\n      case CurrentAction.RecoloringPickingTile:\n        telemetryCall(TelemetryCodes.RecolorTile);\n        await this.actRecolorTile(row, col);\n        break;\n    }\n  }\n\n  public async actPlaceTile(row: number, col: number) {\n    if (this.actioningBankId === undefined) {\n      throw Error('Cannot place tile, no actioning bank');\n    }\n    this.board.setAt(row, col, this.banks.getBank(this.actioningBankId).color);\n    this.banks.resetBank(this.actioningBankId);\n    await this.maybeAddPointsForTileFinalization(row, col);\n    await this.afterBankAction();\n    this.updateState();\n    await this.checkEnd();\n  }\n\n  public async actRecolorTile(row: number, col: number) {\n    if (this.actioningBankId === undefined) {\n      throw Error('Cannot place tile, no actioning bank');\n    }\n    const bank = this.banks.getBank(this.actioningBankId);\n    const tile = this.board.getAt(row, col);\n\n    if (tile?.color === undefined) {\n      throw Error(`Cannot recolor at ${row},${col}, no tile there`);\n    }\n\n    // this.board.setAt(row, col,\n    //   this.initialState.colors[this.initialState.colors.indexOf(tile.color) + 1]\n    //   ?? this.initialState.colors[0]);\n    this.board.setAt(row, col, bank.color);\n    this.banks.resetBank(this.actioningBankId);\n    await this.maybeAddPointsForTileFinalization(row, col);\n    await this.afterBankAction();\n    this.updateState();\n    await this.checkEnd();\n  }\n\n  public async actStartMovingTile(row: number, col: number) {\n    if (this.actioningBankId === undefined) {\n      throw Error('Cannot move tile, no actioning bank');\n    }\n    this.currentAction = CurrentAction.MovingTileMoving;\n    this.movingTileSourcePosition = [row, col];\n    this.banks.resetBank(this.actioningBankId);\n    this.updateState();\n  }\n\n  public async actCompleteMovingTile(row: number, col: number) {\n    if (this.movingTileSourcePosition === undefined) {\n      throw Error('Cannot move tile, no source pos');\n    }\n    this.board.setAt(row, col, this.board.getAt(...this.movingTileSourcePosition)?.color);\n    this.board.setAt(...this.movingTileSourcePosition, undefined);\n    await this.maybeAddPointsForTileFinalization(row, col);\n    await this.afterBankAction();\n    this.updateState();\n    await this.checkEnd();\n  }\n\n  public async forceNextRound() {\n    await this.prepareNextRound();\n    this.updateState();\n  }\n\n  private async checkEnd() {\n    if (this.points < 0) {\n      await this.wait();\n      this.end = 'lost';\n      this.currentAction = CurrentAction.Finished;\n      this.updateState();\n    } else if (this.board.isFinished()) {\n      await this.wait();\n      this.end = 'won';\n      this.currentAction = CurrentAction.Finished;\n      this.updateState();\n    }\n  }\n\n  private async wait(time = 500) {\n    const action = this.currentAction;\n    this.currentAction = CurrentAction.Animation;\n    this.updateState();\n    await new Promise(res => setTimeout(res, time));\n    this.currentAction = action;\n    this.updateState();\n  }\n\n  private async maybeAddPointsForTileFinalization(row: number, col: number) {\n    if (this.board.isFinalized(row, col)) {\n      telemetryCall(TelemetryCodes.FinalizeTile);\n      await this.addPoints(POINTS_FOR_TILE_FINALIZATION);\n    }\n  }\n\n  private async addPoints(points: number, time?: number, forEveryPoint?: () => Promise<void>) {\n    for (let i = 0; i < Math.abs(points); i++) {\n      await this.wait(time);\n      this.points += (points < 0 ? -1 : 1);\n      await forEveryPoint?.();\n      this.updateState();\n      if (this.points < 0) {\n        await this.checkEnd();\n        return;\n      }\n    }\n  }\n\n  private async afterBankAction() {\n    if (this.actioningBankId === undefined) {\n      throw Error('Cannot clean bank action, no actioning bank');\n    }\n    this.actioningBankId = undefined;\n\n    if (!this.banks.areActionsAvailable()) {\n      await this.prepareNextRound();\n    } else {\n      this.currentAction = CurrentAction.ChoosingBankToApply;\n    }\n  }\n\n  private async prepareNextRound() {\n    this.bags.reshuffle();\n    this.roundNumber++;\n    await this.prepareNextBagPick();\n    // await this.addPoints(-1);\n  }\n\n  private updateState() {\n    this.stateHasUpdated(this.getSerializedState());\n  }\n\n  private pushRevertableState() {\n    this.onPushRevertableState?.(this.getSerializedState());\n  }\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { GameLevel, GameState } from '../types';\nimport { StartPage } from './StartPage';\nimport { useCachedLevelStore } from './useCachedLevelStore';\nimport { LevelSelectionPage } from './LevelSelectionPage';\nimport { gameLevelToGameState } from '../gameLevelToGameState';\nimport { GameContainer } from './GameContainer';\nimport { BoardContainer } from './BoardContainer';\nimport { Dialog } from './Dialog';\nimport { PrivacyNotice } from './PrivacyNotice';\n\nenum Page {\n  Home,\n  LevelSelection,\n  InGame,\n}\n\nexport const Application: React.FC<{}> = props => {\n  const [page, setPage] = useState(Page.Home);\n  const [level, setLevel] = useState<GameState>();\n  const [aboutOpen, setAboutOpen] = useState(false);\n  const [privacyOpen, setPrivacyOpen] = useState(false);\n  const { lastLevel } = useCachedLevelStore(undefined);\n  let component: React.ReactNode;\n\n  switch (page) {\n    case Page.Home:\n      component = (\n        <StartPage\n          onPlay={() => setPage(Page.LevelSelection)}\n          onContinue={() => {\n            if (lastLevel) {\n              setLevel(lastLevel);\n              setPage(Page.InGame);\n            }\n          }}\n          onAbout={() => setAboutOpen(true)}\n          onPrivacyOpen={() => setPrivacyOpen(true)}\n        />\n      );\n      break;\n    case Page.LevelSelection:\n      component = (\n        <LevelSelectionPage\n          onBack={() => setPage(Page.Home)}\n          onSelect={(level) => {\n            setPage(Page.InGame);\n            setLevel(gameLevelToGameState(level));\n          }}\n        />\n      );\n      break;\n    case Page.InGame:\n      component = (\n        <GameContainer\n          initialState={level}\n          backToLevelSelection={() => setPage(Page.LevelSelection)}\n          openAboutPage={() => setAboutOpen(true)}\n          quit={() => setPage(Page.Home)}\n        >\n          <BoardContainer />\n        </GameContainer>\n      );\n      break;\n  }\n\n  return (\n    <>\n      { component }\n      <Dialog\n        isOpen={aboutOpen}\n        onClose={() => setAboutOpen(false)}\n      >\n        <p>\n          Orion is a singleplayer board game inspired by the board game Azul. The goal is to fill the board\n          with tiles in specific colors by cleverly choosing tiles from bags and arranging them in banks.\n        </p>\n        <p>\n          The game was developed by <a href=\"https://lukasbach.com\" target=\"_blank\">Lukas Bach</a> as Open\n          Source. The code is available at <a href=\"https://github.com/lukasbach/orion\" target=\"_blank\">GitHub</a>.\n          If you enjoyed the game, I'd appreciate a star on the repo! You can also file any issues you've encountered\n          there.\n        </p>\n        <p>\n          You can also checkout my other projects at my <a href=\"https://github.com/lukasbach\" target=\"_blank\">GitHub</a>&nbsp;\n          or <a href=\"https://lukasbach.com\" target=\"_blank\">personal page</a>, including\n          the notebook app <a href=\"https://yana.js.org\" target=\"_blank\">Yana</a> and\n          the collaborative IDE <a href=\"https://devsession.js.org\" target=\"_blank\">DevSession</a>.\n        </p>\n        <p>\n          The icons used in Orion are provided by <a href=\"https://fontawesome.com\" target=\"_blank\">Fontawesome</a>&nbsp;\n          (<a href=\"https://fontawesome.com/license\" target=\"_blank\">License</a>).\n        </p>\n        <p>\n          Orion is &copy; 2020 by <a href=\"https://lukasbach.com\" target=\"_blank\">Lukas Bach</a>.\n        </p>\n      </Dialog>\n      <Dialog isOpen={privacyOpen} onClose={() => setPrivacyOpen(false)} children={<PrivacyNotice />} />\n    </>\n  );\n};\n","import { BagState, CurrentAction, GameLevel, GameState, TileColor } from './types';\n\nconst randomItem = <T>(arr: T[]) => arr[Math.floor(Math.random() * arr.length)];\n\nconst getBag = (colors: TileColor[], bagSize: number): BagState => ({\n  tiles: '_'.repeat(bagSize).split('').map(_ => randomItem(colors)),\n});\n\nconst getBags = (colors: TileColor[], bagCount: number, bagSize: number): BagState[] => (\n  '_'.repeat(bagCount).split('').map(_ => getBag(colors, bagSize))\n);\n\nexport const gameLevelToGameState = (level: GameLevel): GameState => {\n  return {\n    name: level.name,\n    boardSetup: level.boardSetup,\n    boardState: { tiles: level.boardSetup.tiles.map(row => row.map(tile => ({}))) },\n    bankSetup: level.bankSetup,\n    bankState: {\n      banks: level.bankSetup.banks.map(bank => ({ count: 0 })),\n    },\n    colors: level.colors,\n    bags: getBags(level.colors, level.bagCount, level.bagSize),\n    currentAction: CurrentAction.ChoosingFromBag,\n    currentBag: 0,\n    points: level.points,\n    roundNumber: 0,\n    bagPresets: level.bagPresets,\n    tutorialRenderer: level.tutorialRenderer\n  }\n};\n","import { BoardTileSetup } from '../types';\n\nconst _ = null;\nconst X: BoardTileSetup = {};\nconst A: BoardTileSetup = { requiredColor: 0 };\nconst B: BoardTileSetup = { requiredColor: 1 };\nconst C: BoardTileSetup = { requiredColor: 2 };\nconst D: BoardTileSetup = { requiredColor: 3 };\nconst E: BoardTileSetup = { requiredColor: 4 };\nconst F: BoardTileSetup = { requiredColor: 5 };\n\nexport const levelHelpers = { _, X, A, B, C, D, E, F};","import { BankAction, BankSetup, CurrentAction, GameLevel, LevelCategory } from '../types';\nimport { levelHelpers } from './helpers';\n\nconst { _, X, A, B, C, D, E, F} = levelHelpers;\n\nconst bankSetup: BankSetup = {\n  banks: [\n    { tiles: 1, action: BankAction.Recolor },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 2, action: BankAction.PlaceInRow, placementRow: 2 },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 1, action: BankAction.Recolor },\n  ]\n};\n\nconst category: LevelCategory = LevelCategory.Tutorial;\nconst points = 10;\nconst colors = [0, 1, 2] as any;\nconst bagCount = 2;\nconst bagSize = 2;\n\nexport const TutorialLevels: GameLevel[] = [\n  {\n    name: 'Tutorial 1',\n    points, bagCount, bagSize, category,\n    colors: [0, 1],\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 1 },\n      ]\n    },\n    boardSetup: {\n      tiles: [\n        [A, _,],\n        [_, B,],\n      ],\n      rightOffset: 0,\n    },\n    bagPresets: [\n      [[0, 1], [0, 1]],\n      [[1, 1], [0, 0]],\n    ],\n    tutorialRenderer: state => {\n      if (state.roundNumber === 0) {\n        if (state.currentBag === 0 && state.currentAction === CurrentAction.ChoosingFromBag) {\n          return {\n            messages: [\n              'The goal of the game is to fill up the board above with tiles corresponding to the field colors. Fill ' +\n              'a \"Place a tile\"-bank to the top right ' +\n              'with one color to place a tile of the same color in the corresponding row.',\n              'You start by picking a color from the first bag below. Start by picking the green tile.',\n              'All tiles with the same color within the current will be picked at once and have to be deposited in one ' +\n              'bank at a time.'\n            ],\n            highlightBags: [[0]]\n          };\n        } else if (state.currentBag === 1 && state.currentAction === CurrentAction.PickingBank) {\n          return {\n            messages: [\n              'Place the tile in the first bank (top right) by clicking on one free space in the bank.'\n            ],\n            highlightBanks: [[0, 1]]\n          };\n        } else if (state.currentBag === 1 && state.currentAction === CurrentAction.ChoosingFromBag) {\n          return {\n            messages: [\n              'Now you can choose a color from the second bag. Again pick the green tile.'\n            ],\n            highlightBags: [[], [0]]\n          };\n        } else if (state.currentBag === 'remainings' && state.currentAction === CurrentAction.PickingBank && state.bankState.banks[0].count < 2) {\n          return {\n            messages: [\n              'You can now fill the bank completely.'\n            ],\n            highlightBanks: [[0, 1]]\n          };\n        } else if (state.currentBag === 'remainings' && state.currentAction === CurrentAction.PickingBank) {\n          return {\n            messages: [\n              'You can now fill the other bank completely.'\n            ],\n            highlightBanks: [[], [0, 1]]\n          };\n        }  else if (state.currentBag === 'remainings' && state.currentAction === CurrentAction.ChoosingFromBag) {\n          return {\n            messages: [\n              'After you\\'ve picked from every bag, you must pick the remaining tiles. Now, you pick from all bags ' +\n              'at once, so in future levels you should make sure that you can fit in the remaining tiles.',\n              'If you cannot fit in all remaining colors, the game doesn\\'t end, but you will loose one point for every ' +\n              'tile that did not fit into any bank. If your point count goes below zero, you loose.',\n              'Choose the remaining red tiles to continue.'\n            ],\n            highlightBags: [[1], [1]]\n          };\n        } else if (state.currentAction === CurrentAction.ChoosingBankToApply) {\n          return {\n            messages: [\n              'You can now apply the banks. You get two points for every tile placed on its final color, but none' +\n              ' for tiles placed on incorrect colors.'\n            ],\n            highlightBankActions: [0, 1]\n          };\n        } else if (state.currentAction === CurrentAction.PlacingTile) {\n          return {\n            messages: [\n              'You can only place the tile in the row of the chosen bank. Place the tile on the board now.'\n            ],\n            highlightBoardTiles: [\n              state.actioningBankId === 0 ? [0] : [],\n              state.actioningBankId === 1 ? [1] : [],\n            ]\n          };\n        }\n      }\n      if (state.currentAction === CurrentAction.Animation) {\n        return {\n          messages: ['Great Job!']\n        };\n      }\n      return {\n        messages: ['You can revert to an earlier game state by clicking on \"revert\" to the top right, or restart' +\n        ' the level via the game\\'s menu.']\n      };\n    }\n  },\n  {\n    name: 'Tutorial 2',\n    points, bagCount, bagSize, category,\n    colors: [0, 1],\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.Move },\n      ]\n    },\n    boardSetup: {\n      tiles: [\n        [A, _,],\n        [_, B,],\n      ],\n      rightOffset: 0,\n    },\n    bagPresets: [\n      [[1, 1], [1, 1]],\n      [[0, 1], [1, 0]],\n    ],\n    tutorialRenderer: state => {\n      if (state.roundNumber === 0 && (state.currentAction === CurrentAction.ChoosingBankToApply || state.currentAction === CurrentAction.PlacingTile)) {\n        return {\n          messages: [\n            'You\\'ll see that placing a tile on an incorrect color yields no points. You still get the full 2 points for ' +\n            'moving it to its final destination.',\n            'After it reached a field with a matching color, it can no longer be moved.',\n            'After you placed a tile in the upper row, move it by clicking on \"move tile\" in the second bank, clicking the tile' +\n            ' you want to move and then clicking on the field you want it to move to.'\n          ],\n          highlightBankActions: [0, 1],\n          highlightBoardTiles: state.currentAction === CurrentAction.PlacingTile ? [[0]] : undefined\n        };\n      }\n\n      if (state.roundNumber === 0 && (state.currentAction === CurrentAction.ChoosingFromBag || state.currentAction === CurrentAction.PickingBank)) {\n        return {\n          messages: [\n            'This time, only the upper bank can place tiles. This means you cannot directly place any tiles on the ' +\n            'second row.',\n            'However, if you fill the second bank, you can move any tile that is not on its final color.',\n            'Start by placing a red tile in the first row, then moving it downwards.'\n          ],\n          highlightBags: [[0, 1], [0, 1]],\n          highlightBanks: [[0, 1], [0, 1]]\n        };\n      }\n\n      if (state.currentAction === CurrentAction.MovingTilePickingTile) {\n        return {\n          messages: ['Click the tile you want to move'],\n          highlightBoardTiles: [[0]]\n        };\n      }\n\n      if (state.currentAction === CurrentAction.MovingTileMoving) {\n        return {\n          messages: ['Click the target where you want to move it.'],\n          highlightBoardTiles: [[], [1]]\n        };\n      }\n\n      return {\n        messages: [\n          'Continue by completing the level.'\n        ]\n      };\n    }\n  },\n  {\n    name: 'Tutorial 3',\n    points, bagCount, bagSize, category,\n    colors: [0, 1],\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.Recolor },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.Recolor },\n      ]\n    },\n    boardSetup: {\n      tiles: [\n        [A, B, A, B],\n      ],\n      rightOffset: 0,\n    },\n    bagPresets: [\n      [[0, 1], [1, 1]],\n      [[1, 1], [1, 0]],\n      [[0, 0], [0, 0]],\n      [[1, 0], [1, 1]],\n    ],\n    tutorialRenderer: state => {\n      return {\n        messages: [\n          'This time, you have to recoloring-banks. Fill them up, and you can recolor a tile that is not on its final' +\n          ' field to the color that you\\'ve filled up the bank with.',\n          'Again, you\\'ll get the full two points after recoloring a tile to its final color.',\n          'Continue by completing the level.'\n        ]\n      };\n    }\n  },\n  {\n    name: 'Tutorial 4',\n    points, bagCount, bagSize, category,\n    colors: [0, 1, 2],\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.Move },\n        { tiles: 2, action: BankAction.Move },\n        { tiles: 2, action: BankAction.Recolor },\n      ]\n    },\n    boardSetup: {\n      tiles: [\n        [A, A, A, A,],\n        [_, B, _, _,],\n        [_, _, C, _,],\n        [_, _, _, A,],\n      ],\n      rightOffset: 0,\n    },\n    tutorialRenderer: state => {\n      return {\n        messages: [\n          'Let\\'s see how well you can apply what you\\'ve learned. Good luck!'\n        ]\n      };\n    }\n  },\n];\n\n","import { BankAction, BankSetup, GameLevel, LevelCategory } from '../types';\nimport { levelHelpers } from './helpers';\n\nconst { _, X, A, B, C, D, E, F} = levelHelpers;\n\nconst bankSetup: BankSetup = {\n  banks: [\n    { tiles: 1, action: BankAction.Recolor },\n    { tiles: 2, action: BankAction.PlaceInRow, placementRow: 1 },\n    { tiles: 3, action: BankAction.PlaceInRow, placementRow: 2 },\n    { tiles: 2, action: BankAction.PlaceInRow, placementRow: 3 },\n    { tiles: 1, action: BankAction.Move },\n  ]\n};\n\nconst bridgeBankSetup: BankSetup = {\n  banks: [\n    { tiles: 5, action: BankAction.Move },\n    { tiles: 4, action: BankAction.Move },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 2, action: BankAction.Recolor },\n    { tiles: 1, action: BankAction.PlaceInRow, placementRow: 4 },\n  ]\n};\n// const bridgeBankSetup: BankSetup = {\n//   banks: [\n//     { tiles: 5, action: BankAction.Recolor },\n//     { tiles: 4, action: BankAction.Move },\n//     { tiles: 3, action: BankAction.Move },\n//     { tiles: 2, action: BankAction.Move },\n//     { tiles: 1, action: BankAction.PlaceInRow, placementRow: 4 },\n//   ]\n// };\n\n// Names: https://en.wikipedia.org/wiki/List_of_proper_names_of_stars\n\nconst category: LevelCategory = LevelCategory.Easy;\nconst points = 10;\nconst colors = [0, 1, 2] as any;\nconst bagCount = 2;\nconst bagSize = 3;\n\nexport const EasyLevels: GameLevel[] = [\n  {\n    name: 'Gemini',\n    bankSetup, points, colors,\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [_, C, _, _,],\n        [B, _, _, B,],\n        [_, A, A, _,],\n        [B, _, _, B,],\n        [_, C, _, _,],\n      ],\n      rightOffset: 1,\n    },\n  },\n  {\n    name: 'Crater',\n    bankSetup, points, colors,\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [C, _, A, _, _,],\n        [_, A, C, _, _,],\n        [_, C, _, B, _,],\n        [_, _, B, A, _,],\n        [_, _, A, _, C,],\n      ],\n      rightOffset: 0,\n    },\n  },\n  {\n    name: 'Ursa Major',\n    bankSetup, points, colors,\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [_, _, _,],\n        [A, B, A,],\n        [B, C, B,],\n        [C, A, C,],\n        [_, _, _,],\n      ],\n      rightOffset: 1,\n    },\n  },\n  {\n    name: 'Lyra',\n    bankSetup, points, colors,\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [_, C, _, C, _,],\n        [_, A, _, A, _,],\n        [A, B, C, B, A,],\n        [_, A, _, A, _,],\n        [_, C, _, C, _,],\n      ],\n      rightOffset: 1,\n    },\n  },\n  {\n    name: 'Aquila',\n    bankSetup: bridgeBankSetup,\n    colors: [0, 1, 2, 3],\n    points, bagSize, category,\n    bagCount: 3,\n    boardSetup: {\n      tiles: [\n        [_, _, _,],\n        [D, _, A,],\n        [C, _, B,],\n        [B, _, C,],\n        [A, _, D,],\n      ],\n      rightOffset: 1,\n    },\n  },\n  {\n    name: 'Leo',\n    bankSetup: bridgeBankSetup,\n    colors: [0, 1, 2, 3],\n    points, bagSize, category,\n    bagCount: 3,\n    boardSetup: {\n      tiles: [\n        [_, _, _, _,],\n        [_, _, _, _,],\n        [A, D, C, _,],\n        [_, _, _, B,],\n        [A, A, A, _,],\n      ],\n      rightOffset: 0,\n    },\n  },\n  {\n    name: 'Taurus',\n    bankSetup: bridgeBankSetup,\n    colors: [0, 1, 2, 3],\n    points, bagSize, category,\n    bagCount: 3,\n    boardSetup: {\n      tiles: [\n        [_, D, D, _,],\n        [C, _, _, _,],\n        [_, C, B, _,],\n        [_, _, _, B,],\n        [_, A, A, _,],\n      ],\n      rightOffset: 0,\n    },\n  },\n];\n\n","import { BankAction, BankSetup, GameLevel, LevelCategory } from '../types';\nimport { levelHelpers } from './helpers';\n\nconst { _, X, A, B, C, D, E, F} = levelHelpers;\n\nconst bankSetup: BankSetup = {\n  banks: [\n    { tiles: 3, action: BankAction.PlaceInRow, placementRow: 0 },\n    { tiles: 2, action: BankAction.Move },\n    { tiles: 1, action: BankAction.Recolor },\n    { tiles: 2, action: BankAction.Move },\n    { tiles: 3, action: BankAction.PlaceInRow, placementRow: 4 },\n  ]\n};\n\nconst bridgeBankSetup: BankSetup = {\n  banks: [\n    { tiles: 5, action: BankAction.Move },\n    { tiles: 4, action: BankAction.Move },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 2, action: BankAction.Recolor },\n    { tiles: 1, action: BankAction.PlaceInRow, placementRow: 4 },\n  ]\n};\n\nconst category: LevelCategory = LevelCategory.Medium;\nconst points = 20;\nconst colors = [0, 1, 2] as any;\nconst bagCount = 3;\nconst bagSize = 3;\n\nexport const MediumLevels: GameLevel[] = [\n  {\n    name: 'Canes Venatici',\n    bankSetup: bridgeBankSetup, points, colors: [0, 1, 2, 3],\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [_, B, C, D,],\n        [A, _, _, _,],\n        [_, D, C, _,],\n        [_, _, _, B,],\n        [A, A, A, _,],\n      ],\n      rightOffset: 1,\n    },\n  },\n  {\n    name: 'Hercules',\n    category,\n    boardSetup: {\n      tiles: [\n        [C, _, C, _,],\n        [_, B, _, _,],\n        [A, A, A, A,],\n        [_, B, _, _,],\n        [C, _, C, _,],\n      ],\n      rightOffset: 0,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 1, action: BankAction.Recolor },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 1, action: BankAction.Recolor },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2],\n    bagCount: 2,\n    bagSize: 3,\n  },\n  {\n    name: 'Fornax',\n    category,\n    boardSetup: {\n      tiles: [\n        [A, B, C, D,],\n        [B, C, D, _,],\n        [C, D, _, _,],\n        [D, _, _, _,],\n      ],\n      rightOffset: -3,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 0, action: BankAction.Recolor, },\n        { tiles: 1, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 1 },\n        { tiles: 3, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 3 },\n        { tiles: 5, action: BankAction.Recolor, },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2, 3],\n    bagCount: 3,\n    bagSize: 3,\n  },\n  {\n    name: 'Cygnus',\n    boardSetup: {\n      tiles: [\n        [_, A, A, A, _,],\n        [_, C, _, C, _,],\n        [B, B, _, B, B,],\n        [_, C, _, C, _,],\n        [_, A, A, A, _,],\n      ],\n      rightOffset: 0,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Aquila',\n    boardSetup: {\n      tiles: [\n        [A, A,],\n        [A, A,],\n        [A, A,],\n        [A, A,],\n        [A, A,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors: [0, 1, 2, 3],\n    bagCount, bagSize,\n  },\n  {\n    name: 'Scorpius',\n    boardSetup: {\n      tiles: [\n        [_, B, B, B, _,],\n        [_, _, _, C, C,],\n        [_, _, _, _, _,],\n        [D, D, _, _, _,],\n        [_, A, A, A, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors: [0, 1, 2, 3],\n    bagCount, bagSize,\n  },\n  {\n    name: 'Cepheus',\n    boardSetup: {\n      tiles: [\n        [_, _, A, B, A,],\n        [B, _, _, _, B,],\n        [A, _, _, _, A,],\n        [B, _, _, _, B,],\n        [A, B, A, _, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Draco',\n    boardSetup: {\n      tiles: [\n        [_, _, A, A, A,],\n        [C, _, _, _, B,],\n        [C, _, _, _, C,],\n        [B, _, _, _, C,],\n        [A, A, A, _, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Virgo',\n    boardSetup: {\n      tiles: [\n        [_, B, _, _, _,],\n        [A, _, C, _, _,],\n        [C, _, _, A, _,],\n        [B, _, _, _, B,],\n        [A, A, A, _, _,],\n      ],\n      rightOffset: -2,\n    },\n    bankSetup: bridgeBankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n];\n\n","import { BankAction, BankSetup, GameLevel, LevelCategory, TileColor } from '../types';\nimport { levelHelpers } from './helpers';\n\nconst { _, X, A, B, C, D, E, F} = levelHelpers;\n\nconst bankSetup: BankSetup = {\n  banks: [\n    { tiles: 5, action: BankAction.PlaceInRow, placementRow: 1 },\n    { tiles: 4, action: BankAction.Move },\n    { tiles: 3, action: BankAction.Recolor },\n    { tiles: 4, action: BankAction.Move },\n    { tiles: 5, action: BankAction.PlaceInRow, placementRow: 5 },\n  ]\n};\n\nconst category: LevelCategory = LevelCategory.Hard;\nconst points = 30;\nconst colors: TileColor[] = [0, 1, 2, 3];\nconst bagCount = 3;\nconst bagSize = 4;\n\nexport const HardLevels: GameLevel[] = [\n  {\n    name: 'Pegasus',\n    boardSetup: {\n      tiles: [\n        [A, B, C, D,],\n        [B, C, D, A,],\n        [C, D, A, B,],\n        [D, A, B, C,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 3 },\n        { tiles: 2, action: BankAction.Recolor },\n      ]\n    },\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Triangulum',\n    boardSetup: {\n      tiles: [\n        [_, _, A, _, _, _,],\n        [A, _, _, B, _, _,],\n        [_, B, _, _, C, _,],\n        [_, C, A, C, _, _,],\n        [C, _, _, B, _, _,],\n        [_, B, _, _, A, _,],\n        [_, _, A, _, _, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Serpens',\n    boardSetup: {\n      tiles: [\n        [_, A, _, B, _, C, _, _,],\n        [_, _, A, _, B, _, C, _,],\n        [_, B, _, A, _, B, _, C,],\n        [_, _, B, _, A, _, B, _,],\n        [_, C, _, B, _, A, _, B,],\n        [_, _, C, _, B, _, A, _,],\n        [_, _, _, C, _, B, _, A,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Corvus',\n    boardSetup: {\n      tiles: [\n        [_, C, _, _, _, B, _,],\n        [B, _, D, _, A, _, C,],\n        [A, _, A, _, D, _, D,],\n        [D, _, B, _, C, _, A,],\n        [C, _, C, _, B, _, B,],\n        [B, _, D, _, A, _, C,],\n        [A, _, _, _, _, _, D,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 5, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 2, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 5, action: BankAction.PlaceInRow, placementRow: 6 },\n      ]\n    },\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Andromeda',\n    boardSetup: {\n      tiles: [\n        [_, _, A, A, _, _,],\n        [_, A, A, A, A, _,],\n        [A, A, _, _, A, A,],\n        [_, _, _, _, _, _,],\n        [A, A, _, _, A, A,],\n        [_, A, A, A, A, _,],\n        [_, _, A, A, _, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors: [0, 1, 2, 3],\n    bagCount, bagSize,\n  },\n  {\n    name: 'Cetus',\n    boardSetup: {\n      tiles: [\n        [A, A, _, C, _, _,],\n        [_, D, D, C, B, _,],\n        [_, _, _, _, B, A,],\n        [_, D, D, C, B, _,],\n        [A, A, _, C, _, _,],\n      ],\n      rightOffset: -1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 5, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 5, action: BankAction.PlaceInRow, placementRow: 4 },\n      ]\n    },\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Crux',\n    boardSetup: {\n      tiles: [\n        [_, _, C, D, C, _, _,],\n        [_, _, _, C, _, _, _,],\n        [C, _, _, B, _, _, C,],\n        [D, C, B, B, B, C, D,],\n        [C, _, _, B, _, _, C,],\n        [_, _, _, A, _, _, _,],\n        [_, _, A, D, A, _, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 5, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 2, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 4, action: BankAction.Move },\n        { tiles: 5, action: BankAction.PlaceInRow, placementRow: 6 },\n      ]\n    },\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Delphinus',\n    boardSetup: {\n      tiles: [\n        [_, _, _, A, _, _, _,],\n        [_, _, B, A, B, _, _,],\n        [_, C, _, A, _, C, _,],\n        [D, _, _, A, _, _, D,],\n        [_, C, _, A, _, C, _,],\n        [_, _, B, A, B, _, _,],\n        [_, _, _, A, _, _, _,],\n      ],\n      rightOffset: -1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Aquarius',\n    boardSetup: {\n      tiles: [\n        [_, _, _, D, _, _, _,],\n        [_, _, C, A, C, _, _,],\n        [_, C, B, _, B, C, _,],\n        [D, A, _, _, _, A, D,],\n        [_, C, B, _, B, C, _,],\n        [_, _, C, A, C, _, _,],\n        [_, _, _, D, _, _, _,],\n      ],\n      rightOffset: -1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n  {\n    name: 'Orion',\n    boardSetup: {\n      tiles: [\n        [A, B, C, D, C, B, A,],\n        [B, C, D, C, B, A, B,],\n        [C, D, C, B, A, B, C,],\n        [D, C, B, A, B, C, D,],\n        [C, B, A, B, C, D, C,],\n        [B, A, B, C, D, C, B,],\n        [A, B, C, D, C, B, A,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup,\n    category, points, colors,\n    bagCount, bagSize,\n  },\n];\n\n","import { BankAction, BankSetup, GameLevel, LevelCategory } from '../types';\nimport { levelHelpers } from './helpers';\n\nconst { _, X, A, B, C, D, E, F} = levelHelpers;\n\nconst bankSetup: BankSetup = {\n  banks: [\n    { tiles: 1, action: BankAction.Recolor },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 2, action: BankAction.PlaceInRow, placementRow: 2 },\n    { tiles: 3, action: BankAction.Move },\n    { tiles: 1, action: BankAction.Recolor },\n  ]\n};\n\nconst category: LevelCategory = LevelCategory.Unfinished;\nconst points = 10;\nconst colors = [0, 1, 2] as any;\nconst bagCount = 2;\nconst bagSize = 3;\n\nexport const ExperimentalLevels: GameLevel[] = [\n  {\n    name: 'Level 1',\n    bankSetup, points, colors,\n    bagCount, bagSize, category,\n    boardSetup: {\n      tiles: [\n        [C, _, C, _,],\n        [_, B, _, _,],\n        [A, A, A, A,],\n        [_, B, _, _,],\n        [C, _, C, _,],\n      ],\n      rightOffset: 0,\n    },\n  },\n];\n\n","import { BankAction, BoardTileSetup, GameLevel, LevelCategory } from './types';\nimport { TutorialLevels } from './levels/tutorial';\nimport { EasyLevels } from './levels/easy';\nimport { MediumLevels } from './levels/medium';\nimport { HardLevels } from './levels/hard';\nimport { ExperimentalLevels } from './levels/experiments';\n\nconst _ = null;\nconst X: BoardTileSetup = {};\nconst A: BoardTileSetup = { requiredColor: 0 };\nconst B: BoardTileSetup = { requiredColor: 1 };\nconst C: BoardTileSetup = { requiredColor: 2 };\nconst D: BoardTileSetup = { requiredColor: 3 };\nconst E: BoardTileSetup = { requiredColor: 4 };\nconst F: BoardTileSetup = { requiredColor: 5 };\n\nexport const Levels: GameLevel[] = [\n  ...TutorialLevels,\n  ...EasyLevels,\n  ...MediumLevels,\n  ...HardLevels,\n  ...ExperimentalLevels,\n  /*\n  {\n    name: 'Level 1',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [C, _, C, _,],\n        [_, B, _, _,],\n        [A, A, A, A,],\n        [_, B, _, _,],\n        [C, _, C, _,],\n      ],\n      rightOffset: 0,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 1, action: BankAction.Recolor },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 1, action: BankAction.Recolor },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2],\n    bagCount: 2,\n    bagSize: 3,\n  },\n  {\n    name: 'Level 2',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [C, _, C, _,],\n        [_, B, _, _,],\n        [A, A, A, A,],\n        [_, B, _, _,],\n        [C, _, C, _,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 3, action: BankAction.Move },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2],\n    bagCount: 2,\n    bagSize: 3,\n  },\n  {\n    name: 'Level 3',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [A, A, _, C, _, _,],\n        [_, D, D, C, B, _,],\n        [_, _, _, _, B, A,],\n        [_, D, D, C, B, _,],\n        [A, A, _, C, _, _,],\n      ],\n      rightOffset: -1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 5, action: BankAction.Move },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 1 },\n        { tiles: 3, action: BankAction.Recolor, placementRow: 2 },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 3 },\n        { tiles: 5, action: BankAction.Move },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2, 3],\n    bagCount: 4,\n    bagSize: 4,\n  },\n  {\n    name: 'Level 4',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [_, _, _, D, _, _, _,],\n        [_, _, C, A, C, _, _,],\n        [_, C, B, _, B, C, _,],\n        [D, A, _, _, _, A, D,],\n        [_, C, B, _, B, C, _,],\n        [_, _, C, A, C, _, _,],\n        [_, _, _, D, _, _, _,],\n      ],\n      rightOffset: -1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 5, action: BankAction.Move },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 3, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 4 },\n        { tiles: 5, action: BankAction.Move },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2, 3],\n    bagCount: 4,\n    bagSize: 4,\n  },\n  {\n    name: 'Level 5',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [A, B, C, D,],\n        [B, C, D, A,],\n        [C, D, A, B,],\n        [D, A, B, C,],\n      ],\n      rightOffset: 1,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 2, action: BankAction.Recolor },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 3, action: BankAction.Move },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 3 },\n        { tiles: 2, action: BankAction.Recolor },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2, 3],\n    bagCount: 4,\n    bagSize: 4,\n  },\n  {\n    name: 'Diag',\n    category: LevelCategory.Medium,\n    boardSetup: {\n      tiles: [\n        [A, B, C, D,],\n        [B, C, D, _,],\n        [C, D, _, _,],\n        [D, _, _, _,],\n      ],\n      rightOffset: -3,\n    },\n    bankSetup: {\n      banks: [\n        { tiles: 0, action: BankAction.Recolor, },\n        { tiles: 1, action: BankAction.PlaceInRow, placementRow: 0 },\n        { tiles: 2, action: BankAction.PlaceInRow, placementRow: 1 },\n        { tiles: 3, action: BankAction.PlaceInRow, placementRow: 2 },\n        { tiles: 4, action: BankAction.PlaceInRow, placementRow: 3 },\n        { tiles: 5, action: BankAction.Recolor, },\n      ]\n    },\n    points: 10,\n    colors: [0, 1, 2, 3],\n    bagCount: 3,\n    bagSize: 3,\n  },\n  */\n];\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport cx from 'classnames';\n\nconst styles = {\n  pageContainer: cxs({\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    display: 'none',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)',\n    opacity: 0,\n    transition: '.3s opacity ease'\n  }),\n  pageContainerOpen: cxs({\n    display: 'flex',\n    opacity: 1\n  }),\n  dialogContainer: cxs({\n    width: '400px',\n    height: '600px',\n    overflow: 'visible',\n    backgroundColor: 'rgba(0, 0, 0, .6)',\n    borderRadius: '24px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    position: 'relative',\n    ' p': {\n      color: '#d4d4d4',\n      fontSize: '18px',\n      lineHeight: 1.2,\n      margin: '4px 32px',\n      ' a': {\n        color: 'white !important',\n      }\n    }\n  }),\n  closeContainer: cxs({\n    borderRadius: '999px',\n    width: '100px',\n    height: '100px',\n    position: 'fixed',\n    top: '40px',\n    right: '40px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n    transition: '.15s background-color ease',\n    ':hover': {\n      backgroundColor: 'rgba(255, 255, 255, .2)'\n    },\n    ':active': {\n      transition: '.05s background-color ease',\n      backgroundColor: 'rgba(255, 255, 255, .3)'\n    },\n  })\n}\n\nexport const Dialog: React.FC<{\n  isOpen: boolean,\n  onClose?: () => void,\n  cantClose?: boolean,\n}> = props => {\n  return (\n    <div className={cx(\n      styles.pageContainer,\n      props.isOpen && styles.pageContainerOpen\n    )}>\n      <div className={styles.dialogContainer}>\n        { props.children }\n      </div>\n      { !props.cantClose && (\n        <div className={styles.closeContainer} onClick={props.onClose}>\n          <FontAwesomeIcon icon={faTimes} size=\"4x\" />\n        </div>\n      ) }\n    </div>\n  );\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\n\nconst styles = {\n  container: cxs({\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    height: '100px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '64px',\n    color: '#fff',\n    ' div': {\n      marginTop: '-20px',\n      width: '100px',\n      minHeight: '100px',\n      borderRadius: '9999px',\n      backgroundColor: '#282c34',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: '50px'\n    },\n    ' p': {\n      fontFamily: '\"Nanum Pen Script\", cursive',\n      fontWeight: 'bold',\n      margin: '10px 0 0 0'\n    },\n  })\n}\n\nexport const DialogHeader: React.FC<{\n  icon?: IconProp,\n  title: string,\n  color?: string\n}> = props => {\n\n  return (\n    <div className={cx(\n      styles.container,\n      props.color && cxs({ color: props.color })\n    )}>\n      { props.icon && (\n        <div>\n          <FontAwesomeIcon icon={props.icon} />\n        </div>\n      ) }\n      <p>\n        { props.title }\n      </p>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\n\nconst styles = {\n  container: cxs({\n    height: '80px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    fontSize: '32px',\n    color: 'rgba(255, 255, 255, .8)',\n    cursor: 'pointer',\n    transition: '.15s background-color ease',\n    ':hover': {\n      color: '#fff',\n      backgroundColor: 'rgba(255, 255, 255, .1)',\n    }\n  })\n}\n\nexport const DialogButton: React.FC<{\n  onClick?: () => void,\n}> = props => {\n\n  return (\n    <div onClick={props.onClick} className={styles.container}>\n      { props.children }\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport cxs from 'cxs';\n\nconst styles = {\n  container: cxs({\n    display: 'inline-flex',\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n  }),\n  button: cxs({\n    padding: '6px 12px',\n    borderRadius: '10px',\n    backgroundColor: 'rgba(0, 0, 0, .1)',\n    border: '1px solid rgba(0, 0, 0, .3)',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    fontSize: '22px',\n    color: 'rgba(255, 255, 255, .8)',\n    outline: 'none',\n    marginRight: '5px',\n    transition: '.1s all ease',\n    cursor: 'pointer',\n    ':hover': {\n      border: '1px solid rgba(0, 0, 0, .3)',\n      backgroundColor: 'rgba(0, 0, 0, .2)',\n      color: 'rgba(255, 255, 255, .7)',\n    },\n    ':active': {\n      transition: '.05s all ease',\n      backgroundColor: 'rgba(0, 0, 0, .3)',\n    }\n  })\n}\n\nexport const TopRightMenu: React.FC<{\n  actions: Array<{\n    icon?: IconProp,\n    text?: string,\n    onClick?: () => void,\n  }>\n}> = props => {\n\n  return (\n    <div className={styles.container}>\n      { props.actions.map((action, id) => (\n        <button\n          className={styles.button}\n          onClick={action.onClick}\n        >\n          { action.text }\n          { action.text && action.icon && <>&nbsp;&nbsp;</> }\n          { action.icon && <FontAwesomeIcon icon={action.icon} /> }\n        </button>\n      )) }\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport interface CompletionStore {\n  [levelName: string]: undefined | { points: number, round: number };\n}\n\nconst LOCALSTORAGE_KEY = '__LEVELS';\n\nexport const useCompletionStore = () => {\n  const [finishedLevels, setFinishedLevels] = useState<CompletionStore>({});\n\n  useEffect(() => {\n    const str = localStorage.getItem(LOCALSTORAGE_KEY);\n    if (!!str) {\n      setFinishedLevels(JSON.parse(str));\n    }\n  }, []);\n\n  return {\n    finishedLevels,\n    updateLevelCompletion: (levelName: string, points: number, round: number) => {\n      if (!finishedLevels[levelName] || (finishedLevels[levelName]?.points ?? 0) < points) {\n        console.log(\"Save won\")\n        const newVal = {\n          ...finishedLevels,\n          [levelName]: { points, round }\n        };\n        setFinishedLevels(newVal);\n        localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(newVal));\n      }\n    },\n    resetStore: () => {\n      localStorage.clear();\n    }\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { GameState } from '../types';\n\nconst LOCALSTORAGE_KEY = '__LAST_LEVEL';\n\nexport const useCachedLevelStore = (state: string | undefined | null, isFinished?: boolean) => {\n  const [lastLevel, setLastLevel] = useState<GameState>();\n\n  useEffect(() => {\n    if (isFinished) { // TODO\n      localStorage.removeItem(LOCALSTORAGE_KEY);\n    } else if (!!state) {\n      localStorage.setItem(LOCALSTORAGE_KEY, state);\n    }\n  }, [state, isFinished]);\n\n  useEffect(() => {\n    const last = localStorage.getItem(LOCALSTORAGE_KEY);\n    if (last) {\n      setLastLevel(JSON.parse(last));\n    }\n  }, []);\n\n  return {\n    lastLevel\n  };\n};\n","import * as React from 'react';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { CurrentAction, GameState, GameStateContextValue } from '../types';\nimport { Game } from '../game/Game';\nimport { gameLevelToGameState } from '../gameLevelToGameState';\nimport { Levels } from '../level';\nimport { Dialog } from './Dialog';\nimport { DialogHeader } from './DialogHeader';\nimport { faBars, faFrownOpen, faGrinTongueWink, faHistory } from '@fortawesome/free-solid-svg-icons';\nimport { DialogButton } from './DialogButton';\nimport { TopRightMenu } from './TopRightMenu';\nimport { useCompletionStore } from './useCompletionStore';\nimport { useCachedLevelStore } from './useCachedLevelStore';\nimport { telemetryCall } from '../telemetry';\nimport { TelemetryCodes } from '../TelemetryCodes';\n\nexport const GameStateContext = React.createContext<GameStateContextValue>(null as any);\n\nexport const useGame = () => useContext(GameStateContext);\nexport const useIsSmall = () => useContext(GameStateContext).small;\n\nconst initialGame: GameState = gameLevelToGameState(Levels[0]);\n\nexport const GameContainer: React.FC<{\n  initialState?: GameState,\n  small?: boolean,\n  openAboutPage?: () => void,\n  backToLevelSelection?: () => void,\n  quit?: () => void,\n}> = props => {\n  const store = useCompletionStore();\n  const gameStates = useRef<string[]>([]);\n  const [state, setState] = useState<GameState>(props.initialState ?? initialGame);\n  const game = useRef<Game | null>(null);\n  const [small, setSmall] = useState(props.small ?? false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [hasReportedEnd, setHasReportedEnd] = useState(false);\n  useCachedLevelStore(gameStates.current[gameStates.current.length - 1], !!state.end);\n\n  useEffect(() => {\n    game.current = new Game(setState, state, s => gameStates.current.push(JSON.stringify(s)));\n  }, [])\n\n  useEffect(() => {\n    console.log(\"Check win\")\n    if (state.end === 'won' && state.name) {\n      console.log(\"WoN!!\")\n      store.updateLevelCompletion(state.name, state.points, state.roundNumber);\n      if (!hasReportedEnd) {\n        telemetryCall(TelemetryCodes.CompleteLevel);\n        telemetryCall(TelemetryCodes.CompleteLevelPrefix + state.name);\n        setHasReportedEnd(true);\n      }\n    } else if (state.end === 'lost' && state.name && !hasReportedEnd) {\n      telemetryCall(TelemetryCodes.FailLevel);\n      telemetryCall(TelemetryCodes.FailLevelPrefix + state.name);\n      setHasReportedEnd(true);\n    }\n  }, [state.end, state.name, state.points, state.roundNumber, store, hasReportedEnd]);\n\n  console.log(state)\n  console.log(JSON.stringify(state))\n\n  const retry = () => {\n    if (gameStates.current[0]) {\n      const state = JSON.parse(gameStates.current[0]);\n      game.current?.forceUpdateState(state);\n      setState(state);\n      setIsMenuOpen(false);\n      gameStates.current = [];\n      telemetryCall(TelemetryCodes.RetryLevel);\n      telemetryCall(TelemetryCodes.RetryLevelPrefix + state.name);\n    }\n  }\n\n  const revert = () => {\n    if (state.currentAction === CurrentAction.Animation){\n      return;\n    }\n\n    const latestState = gameStates.current.pop();\n    if (latestState) {\n      const parsed = JSON.parse(latestState);\n      game.current?.forceUpdateState(parsed);\n      setState(parsed);\n      telemetryCall(TelemetryCodes.Revert);\n    }\n  }\n\n  const quit = () => {\n    props.quit?.();\n    telemetryCall(TelemetryCodes.AbortLevel);\n    telemetryCall(TelemetryCodes.AbortLevelPrefix + state.name);\n  }\n\n  if (!game.current) {\n    return null;\n  }\n\n  return (\n    <GameStateContext.Provider value={{\n      state, small,\n      game: game.current,\n    }}>\n      { props.children }\n      <TopRightMenu\n        actions={[\n          { text: 'Revert', icon: faHistory, onClick: revert },\n          { icon: faBars, onClick: () => setIsMenuOpen(true) },\n        ]}\n      />\n\n      <Dialog isOpen={state.end === 'won'} cantClose={true}>\n        <DialogHeader\n          title=\"Great job!\"\n          icon={faGrinTongueWink}\n        />\n        <DialogButton onClick={props.backToLevelSelection}>\n          Back to level selection\n        </DialogButton>\n        <DialogButton onClick={props.openAboutPage}>\n          About\n        </DialogButton>\n        <DialogButton onClick={props.quit}>\n          Quit\n        </DialogButton>\n      </Dialog>\n\n      <Dialog isOpen={state.end === 'lost'} cantClose={true}>\n        <DialogHeader\n          title=\"That didn't work out :/ Try again!\"\n          icon={faFrownOpen}\n        />\n        <DialogButton onClick={retry}>\n          Retry\n        </DialogButton>\n        <DialogButton onClick={props.openAboutPage}>\n          About\n        </DialogButton>\n        <DialogButton onClick={quit}>\n          Quit\n        </DialogButton>\n      </Dialog>\n\n      <Dialog isOpen={isMenuOpen} onClose={() => setIsMenuOpen(false)}>\n        <DialogButton onClick={() => setIsMenuOpen(false)}>\n          Continue\n        </DialogButton>\n        <DialogButton onClick={retry}>\n          Retry\n        </DialogButton>\n        <DialogButton onClick={props.openAboutPage}>\n          About\n        </DialogButton>\n        <DialogButton onClick={quit}>\n          Quit\n        </DialogButton>\n      </Dialog>\n    </GameStateContext.Provider>\n  );\n};\n","import cxs from 'cxs';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport Color from 'color';\nimport { useIsSmall } from './GameContainer';\n\nconst activeStyles: cxs.CSSObject = {\n  height: '66px',\n  margin: '-4px 0 0 0 !important',\n  borderBottomWidth: '2px !important',\n  borderBottomLeftRadius: '6px',\n  borderBottomRightRadius: '6px',\n  boxShadow: 'none !important'\n}\n\nconst styles = {\n  container: cxs({\n    border: '4px solid transparent',\n    width: '64px',\n    height: '64px',\n    borderRadius: '10px',\n    overflow: 'hidden',\n    display: 'inline-block',\n    margin: '4px',\n    backgroundClip: 'content-box',\n    cursor: 'default',\n    pointerEvents: 'all',\n  }),\n  inner: cxs({\n    height: '61px',\n    borderBottomLeftRadius: '10px',\n    borderBottomRightRadius: '10px',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontSize: '64px',\n    margin: '-6px 0 0 0',\n    textAlign: 'center'\n  }),\n  containerGlowing: cxs({\n    animation: 'glow-effect 2s infinite',\n  }),\n  containerSmall: cxs({\n    width: '40px',\n    height: '40px',\n    borderRadius: '6px',\n    borderWidth: '2px',\n    margin: '2px',\n  }),\n  innerSmall: cxs({\n    height: '32px',\n    borderBottomLeftRadius: '6px',\n    borderBottomRightRadius: '6px',\n    fontSize: '32px',\n    margin: '0 0 0 0'\n  }),\n  innerActive: cxs(activeStyles),\n  innerClickable: cxs({\n    cursor: 'pointer',\n    ':hover': {\n      boxShadow: 'rgba(255, 255, 255, .45) 0px 16px 10px inset',\n    },\n    ':active': activeStyles,\n  }),\n};\n\nexport interface CustomTileProps {\n  // kind: 1 | 2 | 3 | 4 | 5 | 6\n  color: string,\n  active?: boolean,\n  border?: boolean,\n  noContent?: boolean,\n  clickable?: boolean,\n  onClick?: () => void,\n  borderColor?: string,\n  glowing?: boolean,\n}\n\nexport const CustomTile: React.FC<CustomTileProps> = props => {\n  const small = useIsSmall();\n\n  return (\n    <div\n      className={cx(\n        styles.container,\n        small && styles.containerSmall,\n        (props.border || props.glowing) && cxs({\n          borderColor: Color(props.borderColor ?? props.color).darken(.4).toString()\n        }),\n        cxs({\n          backgroundColor: !props.noContent ? Color(props.color).darken(.2).toString() : undefined,\n        }),\n        props.clickable && props.noContent && cxs({\n          cursor: 'pointer !important',\n          ':hover': {\n            // boxShadow: `${Color(props.color).alpha(.5).toString()} 0px 4px 13px 4px inset`,\n            borderColor: 'white'\n          }\n        }),\n        props.glowing && styles.containerGlowing,\n      )}\n      onClick={props.clickable ? props.onClick : undefined}\n    >\n      { !props.noContent && (\n        <div className={cx(\n          styles.inner,\n          small && styles.innerSmall,\n          props.active && styles.innerActive,\n          !props.active && props.clickable && styles.innerClickable,\n          cxs({\n            backgroundColor: props.color,\n            borderBottom: `3px solid ${Color(props.color).lighten(.2).toString()}`,\n            color: Color(props.color).lighten(.6).toString(),\n            textShadow: `0 -4px 0 ${Color(props.color).darken(.2).toString()}`\n          })\n        )}>\n          {/* ['쇠', '모', '귀', '려', '휘', '줴', ][props.kind - 1] */}\n          { props.children }\n        </div>\n      ) }\n    </div>\n  );\n};\n\n","import {\n  BagState,\n  BankState,\n  BoardSetup,\n  BoardState,\n  BoardTileState,\n  CurrentAction,\n  GameState, IndividualBankState,\n  TileColor,\n} from './types';\n\nexport const getInitialBoardState = (setup: BoardSetup): BoardState =>\n  ({ tiles: setup.tiles.map(row => row.map(tile => ({}))) });\n\nexport const randomItem = <T>(arr: T[]) => arr[Math.floor(Math.random() * arr.length)];\n\nconst getBag = (colors: TileColor[]): BagState => ({\n  tiles: [randomItem(colors), randomItem(colors), randomItem(colors), randomItem(colors)]\n});\n\nexport const getBags = (colors: TileColor[], bagCount: number, bagSize: number): BagState[] => [\n  getBag(colors), getBag(colors), getBag(colors), getBag(colors)\n];\n\nexport const getRemainingTileCountFromBags = (state: GameState, color: TileColor) => {\n  return state.bags\n    .map(bag => bag.tiles)\n    .reduce<Array<number | null>>((a, b) => [...a, ...b], [])\n    .filter(x => x === color)\n    .length;\n}\n\nexport const getRemainingColorsInBags = (state: GameState) => {\n  const numberOfColors = new Set(state.bags\n    .map(bag => bag.tiles)\n    .reduce<Array<number | null>>((a, b) => [...a, ...b], [])\n    .filter(x => x !== null))\n    .size;\n\n  return numberOfColors;\n}\n\nexport const mutateBoardState = (board: BoardState, mutations: Array<{ x: number, y: number, changeTo: (old: BoardTileState | null) => BoardTileState | null }>) => {\n  let newBoard = JSON.parse(JSON.stringify(board)) as BoardState;\n  for (const mutation of mutations) {\n    newBoard.tiles[mutation.x][mutation.y] = mutation.changeTo(board.tiles[mutation.x]![mutation.y]!);\n  }\n  return newBoard;\n}\n\nexport const emptyBank = (bankState: BankState, actioningBankId: number): BankState => {\n  return {\n    ...bankState,\n    banks: bankState.banks.map((bank, bankId) => {\n      if (bankId === actioningBankId) {\n        return { count: 0, color: undefined };\n      } else {\n        return bank;\n      }\n    })\n  };\n}\n\nexport const nextColor = (state: GameState, color: TileColor) => {\n  const nextColor = state.colors[state.colors.indexOf(color) + 1] ?? state.colors[0];\n  console.log(nextColor, state, color)\n  return nextColor\n}\n\nexport const bankActionsAvailable = (state: GameState, bankToEmpty?: number) => {\n  const banks: BankState = !bankToEmpty ? state.bankState : emptyBank(state.bankState, bankToEmpty);\n  return banks.banks\n    .map((bank, bankId) => bank.count === state.bankSetup.banks[bankId].tiles)\n    .reduce((a, b) => a || b, false);\n}\n\nexport const prepareNextRoundState = (state: GameState, bankToEmpty?: number): Partial<GameState> => {\n  console.log(\"Next round available: \", !bankActionsAvailable(state, bankToEmpty), state)\n  if (!bankActionsAvailable(state, bankToEmpty)) {\n    return {\n      currentAction: CurrentAction.ChoosingFromBag,\n      currentBag: 0,\n      bags: null as any,// getBags(state.colors),\n    };\n  } else {\n    return {};\n  }\n}\n\nexport const countUnpickedTiles = (state: GameState) => {\n  let counter: { [key in TileColor]: number } = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 };\n\n  for (const bag of state.bags) {\n    for (const tile of bag.tiles) {\n      if (tile !== null) {\n        counter[tile]++;\n      }\n    }\n  }\n\n  return Object.values(counter).reduce((a, b) => a + b, 0);\n}\n\nexport const getPotentialBagPicks = (state: GameState): { [key in TileColor]: number } => {\n  let counter: { [key in TileColor]: number } = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 };\n\n  if (state.currentBag === 'remainings') {\n    for (const bag of state.bags) {\n      for (const tile of bag.tiles) {\n        if (tile !== null) {\n          counter[tile]++;\n        }\n      }\n    }\n  } else {\n    for (const tile of state.bags[state.currentBag].tiles) {\n      if (tile !== null) {\n        counter[tile]++;\n      }\n    }\n  }\n\n  return counter;\n}\n\nexport const noValidBagPicksLeft = (state: GameState) => {\n  const potentialBagPicks = getPotentialBagPicks(state);\n  console.log(potentialBagPicks);\n\n  return !Object.entries(potentialBagPicks)\n    .filter(([color, count]) => count > 0)\n    .map(([tileColor, count]) => {\n      const color = tileColor as unknown as TileColor;\n      return state.bankSetup.banks\n        .map((bank, bankId) => (\n          (state.bankState.banks[bankId].count === 0 || state.bankState.banks[bankId].color === color) &&\n          (bank.tiles - state.bankState.banks[bankId].count >= count)\n        ))\n        .reduce((a, b) => a || b, false);\n    })\n    .reduce((a, b) => a || b, false);\n}\n\nexport const potentiallyEndBagPickingIfNoValidMovesLeft = (state: GameState): Partial<GameState> => {\n  if (!noValidBagPicksLeft(state)) {\n    return {};\n  } else {\n    const emptyBag: BagState = { tiles: [null, null, null, null] };\n    return {\n      currentAction: CurrentAction.ChoosingBankToApply,\n      points: state.points - countUnpickedTiles(state),\n      bags: [emptyBag, emptyBag, emptyBag],\n      ...(!bankActionsAvailable(state) ? prepareNextRoundState(state) : {})\n    }\n  }\n}","export const tileNames: string[] = [\n  '쇠', '귀', '려', '뢰', '쥬', '휴', '슈',\n]","export const tileColors: string[] = [\n  '#2fa497',\n  '#e53232',\n  '#c4b24f',\n  '#0785f6',\n  '#490edb',\n//  '#c9d4de',\n//  '#c9d4de',\n//  '#c9d4de',\n//  '#c9d4de',\n];\n\nexport const dummyTileColor = '#c9d4de';","import * as React from 'react';\nimport { TileColor } from '../types';\nimport { CustomTile } from './CustomTile';\nimport { tileNames } from '../tileNames';\nimport { dummyTileColor, tileColors } from '../tileColors';\n\nexport const Tile: React.FC<{\n  color?: TileColor,\n  borderColor?: TileColor,\n  active?: boolean,\n  border?: boolean,\n  noContent?: boolean,\n  clickable?: boolean,\n  onClick?: () => void,\n  glowing?: boolean,\n}> = props => {\n\n  return (\n    <CustomTile\n      { ...props }\n      color={props.color !== undefined ? tileColors[props.color] : dummyTileColor}\n      noContent={props.color === undefined}\n      borderColor={props.borderColor !== undefined ? tileColors[props.borderColor] : undefined}\n    >\n      { props.color !== undefined && tileNames[props.color] }\n    </CustomTile>\n  );\n};\n","import * as React from 'react';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport cxs from 'cxs';\nimport { CustomTile } from './CustomTile';\nimport { randomItem } from '../utils';\nimport { Tile } from './Tile';\n// @ts-ignore\nimport ResizeSensor from \"resize-sensor\";\n\nconst styles = {\n  container: cxs({\n    height: '100%',\n    overflow: 'hidden',\n  }),\n  matrixRow: cxs({\n    position: 'absolute',\n    left: '0px',\n    display: 'flex',\n    overflow: 'hidden',\n  })\n};\n\nconst TILE_SIZE = 78;\n\nconst TileMatrixRow: React.FC<{\n  width: number,\n  offset: number\n}> = props => {\n  const tileIds = useRef(\n    '_'.repeat(100).split('').map((_) => randomItem([null, null, null, 0, 1, 2, 3]))\n  );\n\n  return (\n    <div\n      className={styles.matrixRow}\n      style={{ top: (props.offset - 100) + 'px' }}\n    >\n      {\n        '_'.repeat(props.width).split('').map((tile, id) => {\n          const tileId = tileIds.current[id];\n          if (tileId === null) {\n            return (\n              <CustomTile color={'transparent'} noContent={true} />\n            );\n          } else {\n            return (\n              <Tile\n                color={tileId as any}\n                border={true}\n              />\n            )\n          }\n        })\n      }\n    </div>\n  );\n}\n\nexport const TileMatrix: React.FC<{}> = props => {\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const divRef = useCallback((node: HTMLDivElement) => {\n    if (node !== null) {\n      const refreshSizes = () => {\n        console.log(\"Resize\", node.getBoundingClientRect().height, node.getBoundingClientRect().width)\n        setHeight(node.getBoundingClientRect().height);\n        setWidth(node.getBoundingClientRect().width);\n      };\n      new ResizeSensor(node, refreshSizes);\n      refreshSizes();\n      // node.addEventListener('resize', refreshSizes);\n      // return () => node.removeEventListener('resize', refreshSizes);\n    }\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOffset(o => o + 1);\n    }, 50);\n    return () => clearInterval(interval);\n  }, [])\n\n  const tilesWide = Math.ceil(width / TILE_SIZE);\n  const tilesTall = Math.ceil(height / TILE_SIZE) + 1;\n\n  return (\n    <div ref={divRef} className={styles.container}>\n      {\n        '_'.repeat(tilesTall).split('').map((_, rowId) => (\n          <TileMatrixRow\n            key={rowId}\n            width={tilesWide}\n            offset={(rowId * TILE_SIZE + offset) % ((Math.ceil(height / TILE_SIZE) + 1) * TILE_SIZE)}\n          />\n        ))\n      }\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { GameStateContext } from './GameContainer';\n\nexport const DummyGameContainer: React.FC<{\n  small?: boolean,\n}> = props => {\n\n  return (\n    <GameStateContext.Provider value={{\n      state: null as any,\n      small: !!props.small,\n      game: null as any,\n    }}>\n      { props.children }\n    </GameStateContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { TileMatrix } from './TileMatrix';\nimport { DummyGameContainer } from './DummyGameContainer';\nimport { useCachedLevelStore } from './useCachedLevelStore';\nimport GitHubButton from 'react-github-btn';\n\nconst LEFT_WIDTH = 500;\n\nconst styles = {\n  container: cxs({\n    height: '100%',\n    position: 'relative',\n    overflow: 'hidden',\n  }),\n  bgContainer: cxs({\n    height: '100%',\n    display: 'flex',\n    '> :first-child': {\n      width: `${LEFT_WIDTH - 200}px`\n    },\n    '> :nth-child(2)': {\n      flexGrow: 1\n    }\n  }),\n  leftBg: cxs({\n    position: 'absolute',\n    top: '-10%',\n    left: '-200px',\n    transform: 'rotate(7deg)',\n    height: '120%',\n    width: `${LEFT_WIDTH + 200}px`,\n    backgroundColor: '#212329',\n    borderRight: `8px solid ${'#18191d'}`,\n  }),\n  leftContainer: cxs({\n    color: '#fff',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    textTransform: 'uppercase',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    bottom: '0px',\n    width: LEFT_WIDTH,\n    padding: '60px 40px',\n    ' h1': {\n      fontWeight: 'bold',\n      fontSize: '200px',\n      margin: '8px 0 40px 0',\n    },\n    ' a': {\n      textDecoration: 'none !important',\n    },\n    ' button': {\n      display: 'block',\n      width: `${LEFT_WIDTH}px`,\n      textAlign: 'left',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      color: 'rgba(255, 255, 255, .6)',\n      fontFamily: '\"Nanum Pen Script\", cursive',\n      fontSize: '48px',\n      cursor: 'pointer',\n      padding: '10px 100px 10px 80px',\n      marginLeft: '-40px',\n      ':hover': {\n        color: 'rgba(255, 255, 255, .8)',\n        background: 'linear-gradient(270deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.07) 100%)'\n      },\n      ':active': {\n        color: 'rgba(255, 255, 255, 1)',\n        background: 'linear-gradient(270deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.12) 100%)'\n      }\n    },\n    ' .revert': {\n      textTransform: 'none',\n      fontFamily: 'sans-serif',\n    }\n  }),\n  metainfo: cxs({\n    position: 'absolute',\n    bottom: '10px',\n    left: '40px',\n    width: '450px',\n    ' p': {\n      color: 'rgb(120, 120, 120) !important',\n      textTransform: 'none',\n      fontFamily: 'sans-serif',\n      fontSize: '12px',\n      ' a': {\n        color: 'rgb(160, 160, 160) !important',\n        textDecoration: 'underline !important',\n      }\n    },\n    ' > span': {\n      marginRight: '10px'\n    }\n  })\n};\n\nexport const StartPage: React.FC<{\n  onContinue?: () => void,\n  onPlay?: () => void,\n  onAbout?: () => void,\n  onPrivacyOpen?: () => void,\n}> = props => {\n  const { lastLevel } = useCachedLevelStore(undefined);\n  return (\n    <div className={styles.container}>\n      <div className={styles.bgContainer}>\n        <div />\n        <DummyGameContainer small={false}>\n          <TileMatrix />\n        </DummyGameContainer>\n      </div>\n      <div className={styles.leftBg} />\n      <div className={styles.leftContainer}>\n        <h1>Orion</h1>\n        { /*lastLevel && (\n          <button onClick={props.onContinue}>Continue</button>\n        )*/ }\n        <button onClick={props.onPlay}>Play Game</button>\n        <a href=\"https://github.com/lukasbach/orion\" target=\"_blank\">\n          <button>GitHub</button>\n        </a>\n        <button onClick={props.onAbout}>About</button>\n      </div>\n      <div className={styles.metainfo}>\n        <GitHubButton href=\"https://github.com/lukasbach\" data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\" data-size=\"large\" aria-label=\"Follow @lukasbach on GitHub\">Follow @lukasbach</GitHubButton>\n        <GitHubButton href=\"https://github.com/lukasbach/orion/issues\" data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\" data-icon=\"octicon-issue-opened\" data-size=\"large\" aria-label=\"Issue lukasbach/orion on GitHub\">Issue</GitHubButton>\n        <GitHubButton href=\"https://github.com/lukasbach/orion\" data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\" data-icon=\"octicon-star\" data-size=\"large\" aria-label=\"Star lukasbach/orion on GitHub\">Star</GitHubButton>\n        <p>\n          &copy; 2020 by <a href=\"https://lukasbach.com\" target=\"_blank\">Lukas Bach</a>.&nbsp;\n          <a href=\"https://lukasbach.com/impress\" target=\"_blank\">Impress</a>.&nbsp;\n          <a href=\"#\" onClick={props.onPrivacyOpen}>Privacy Policy</a>.\n        </p>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { LevelPreview } from '../types';\nimport cxs from 'cxs';\nimport cx from 'classnames';\nimport { dummyTileColor, tileColors } from '../tileColors';\n\nconst styles = {\n  container: cxs({\n    width: '160px',\n    height: '100px',\n    minHeight: '100px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center'\n  }),\n  board: cxs({\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  }),\n  boardRow: cxs({\n    display: 'flex',\n  }),\n  boardTile: cxs({\n    width: '10px',\n    height: '10px',\n    margin: '1px',\n    borderRadius: '2px',\n  }),\n  banks: cxs({\n    width: 'max-content',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  }),\n  bank: cxs({\n    display: 'flex',\n    justifyContent: 'flex-end',\n  })\n}\n\nexport const PreviewIcon: React.FC<{\n  level: LevelPreview\n}> = props => {\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.board}>\n        {\n          props.level.bd.map((row, rowId) => (\n            <div key={rowId} className={styles.boardRow}>\n              {\n                row.map((tile, colId) => (\n                  <div\n                    key={colId}\n                    className={cx(\n                      styles.boardTile,\n                      cxs({\n                        backgroundColor: tile === 9 ? 'transparent' : tileColors[tile]\n                      })\n                    )}\n                  />\n                ))\n              }\n            </div>\n          ))\n        }\n      </div>\n      <div className={styles.banks}>\n        {\n          props.level.bk.map((bankSize, rowId) => (\n            <div key={rowId} className={styles.bank}>\n              {\n                '_'.repeat(bankSize).split('').map((_, colId) => (\n                  <div\n                    key={colId}\n                    className={cx(\n                      styles.boardTile,\n                      cxs({\n                        backgroundColor: dummyTileColor\n                      })\n                    )}\n                  />\n                ))\n              }\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { LevelPreview } from '../types';\nimport cxs from 'cxs';\nimport { PreviewIcon } from './PreviewIcon';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n  outer: cxs({\n    display: 'inline-block',\n  }),\n  container: cxs({\n    position: 'relative',\n    width: '180px',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '10px',\n    borderRadius: '8px',\n    border: `1px solid rgba(255, 255, 255, .1)`,\n    cursor: 'pointer',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    color: 'rgba(255, 255, 255, .7)',\n    padding: '16px 10px',\n    '> :first-child': {\n      height: '140px',\n      overflow: 'hidden',\n    },\n    ' h2': {\n      margin: '0',\n      fontSize: '28px',\n    },\n    ':hover': {\n      color: 'rgba(255, 255, 255, .9)',\n      border: `1px solid rgba(255, 255, 255, .3)`,\n    }\n  }),\n  completedInfo: cxs({\n    position: 'absolute',\n    bottom: '0px',\n    right: '10px',\n    color: '#3fa529',\n    fontSize: '16px',\n    fontWeight: 'lighter'\n  })\n}\n\nexport const LevelButton: React.FC<{\n  level: LevelPreview,\n  completed?: { round: number, points: number },\n  onClick?: () => void,\n}> = props => {\n\n  return (\n    <div className={styles.outer}>\n      <div className={styles.container} onClick={props.onClick}>\n        <PreviewIcon level={props.level} />\n        <h2>{ props.level.nm }</h2>\n        { props.completed && (\n          <div className={styles.completedInfo}>\n            {props.completed.points} points after {props.completed.round} rounds&nbsp;\n            <FontAwesomeIcon icon={faCheck} />\n          </div>\n        ) }\n      </div>\n    </div>\n  );\n};\n","import { GameState, LevelPreview } from './types';\n\nexport const gameStateToPreview = (state: GameState): LevelPreview => {\n  return {\n    bd: state.boardSetup.tiles.map(row => row.map(tile => tile?.requiredColor !== undefined ? tile.requiredColor : 9)),\n    bk: state.bankSetup.banks.map(bank => bank.tiles),\n    nm: state.name ?? 'Unnamed level',\n  };\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { LevelButton as LevelButtonComp } from './LevelButton';\nimport { gameStateToPreview } from '../gameStateToPreview';\nimport { gameLevelToGameState } from '../gameLevelToGameState';\nimport { Levels } from '../level';\nimport { StoryContainer } from '../stories/generalui/StoryContainer';\nimport { TopRightMenu } from './TopRightMenu';\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\nimport { CATEGORIES } from '../constants';\nimport { GameLevel, LevelCategory } from '../types';\nimport { useCompletionStore } from './useCompletionStore';\nimport { telemetryCall } from '../telemetry';\nimport { TelemetryCodes } from '../TelemetryCodes';\n\nconst styles = {\n  container: cxs({\n    padding: '40px 40px',\n    ' h1': {\n      // fontFamily: '\"Nanum Pen Script\", cursive',\n      textTransform: 'uppercase',\n      letterSpacing: '8px',\n      fontWeight: 'bold',\n      fontSize: '18px',\n      margin: '40px 0 0 30px',\n      color: 'rgba(255, 255, 255, .8)',\n    },\n    ' p': {\n      margin: '10px 0 30px 0',\n      color: 'white',\n    }\n  }),\n  levelList: cxs({\n    display: 'flex',\n    flexWrap: 'wrap'\n  })\n};\n\nexport const LevelSelectionPage: React.FC<{\n  onBack?: () => void,\n  onSelect?: (level: GameLevel) => void,\n}> = props => {\n  const store = useCompletionStore();\n  return (\n    <div className={styles.container}>\n      { CATEGORIES.map(category => (\n        <div key={category}>\n          <h1>\n            {(() => {\n              switch (category) {\n                case LevelCategory.Tutorial:\n                  return 'Tutorial';\n                case LevelCategory.Easy:\n                  return 'Easy levels';\n                case LevelCategory.Medium:\n                  return 'Medium levels';\n                case LevelCategory.Hard:\n                  return 'Hard levels';\n                default:\n                  return 'Other levels';\n              }\n            })()}\n          </h1>\n          <div className={styles.levelList}>\n            { Levels.filter(level => level.category === category).map(level => {\n              const completed = store.finishedLevels[level.name];\n              return (\n                <LevelButtonComp\n                  level={gameStateToPreview(gameLevelToGameState(level))}\n                  completed={completed}\n                  onClick={() => {\n                    telemetryCall(TelemetryCodes.StartLevel);\n                    telemetryCall(TelemetryCodes.StartLevelPrefix + level.name);\n                    props.onSelect?.(level);\n                  }}\n                />\n              );\n            }) }\n            { Levels.filter(level => level.category === category).length === 0 && (\n              <p>\n                No levels available in this category :/\n              </p>\n            ) }\n          </div>\n        </div>\n      )) }\n\n      <TopRightMenu\n        actions={[\n          { icon: faLongArrowAltLeft, text: 'Back', onClick: props.onBack }\n        ]}\n      />\n    </div>\n  );\n};\n","import { useGame } from './GameContainer';\nimport { useEffect, useState } from 'react';\nimport { TutorialRenderData } from '../types';\n\nexport const useTutorial = () => {\n  const {game, state} = useGame();\n  const [tutorial, setTutorial] = useState<undefined | TutorialRenderData>();\n\n  useEffect(() => {\n    const tut = game.getTutorial();\n    if (tut) {\n      setTutorial(tut);\n    }\n  }, [game, state]);\n\n  return tutorial;\n}","import * as React from 'react';\nimport { useGame } from './GameContainer';\nimport cxs from 'cxs';\nimport { CustomTile } from './CustomTile';\nimport { Tile } from './Tile';\nimport { dummyTileColor } from '../tileColors';\nimport { useTutorial } from './useTutorial';\n\nconst styles = {\n  rowContainer: cxs({\n    display: 'flex',\n  })\n}\n\nexport const BoardUi: React.FC<{}> = props => {\n  const { game, state } = useGame();\n  const { boardSetup, boardState } = state;\n  const tutorial = useTutorial();\n\n  return (\n    <div className={cxs({\n      marginRight: `${state.boardSetup.rightOffset * 70}px`\n    })}>\n      { boardSetup.tiles.map((row, rowId) => (\n        <div key={rowId} className={styles.rowContainer}>\n          { row.map((tile, tileId) => {\n            if (tile === null) {\n              return <CustomTile color={dummyTileColor} noContent={true} />\n            } else {\n              const tileState = boardState.tiles[rowId][tileId];\n              const tileSetup = boardSetup.tiles[rowId][tileId];\n              const clickable = game.canClickBoardTile(rowId, tileId);\n\n              return (\n                <Tile\n                  color={tileState?.color}\n                  clickable={clickable}\n                  onClick={() => game.actClickBoardTile(rowId, tileId)}\n                  border={true}\n                  borderColor={tileSetup?.requiredColor ?? undefined}\n                  glowing={clickable && tutorial?.highlightBoardTiles?.[rowId]?.includes(tileId)}\n                />\n              );\n            }\n          }) }\n        </div>\n      )) }\n    </div>\n  );\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { useGame } from './GameContainer';\n\nconst styles = {\n  container: cxs({\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    marginRight: '200px',\n    paddingRight: '10px',\n    ' h3': {\n      fontSize: '22px',\n      textShadow: `0 -2px 0 rgba(0, 0, 0, .3)`,\n      marginLeft: '20px',\n      color: 'rgba(255, 255, 255, .55)',\n    },\n    ' span': {\n      fontSize: '64px',\n      textShadow: `0 -4px 0 rgba(0, 0, 0, .3)`,\n      marginLeft: '4px',\n      color: 'rgba(255, 255, 255, 1)',\n      display: 'inline-block',\n      width: '40px'\n    }\n  })\n}\n\nexport const GameStats: React.FC<{}> = props => {\n  const { game, state } = useGame();\n\n  return (\n    <div className={styles.container}>\n      <h3>round</h3> <span>{ state.roundNumber }</span>\n      <h3>points</h3> <span>{ state.points }</span>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { BankAction } from '../types';\nimport cxs from 'cxs';\nimport cx from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n  container: cxs({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    pointerEvents: 'all',\n    position: 'relative'\n  }),\n  inner: cxs({\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    textShadow: `0 -4px 0 rgba(0, 0, 0, .3)`,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingLeft: '10px',\n    height: '75%',\n    marginLeft: '-4px',\n\n    ' h3': {\n      fontSize: '22px',\n      color: 'rgba(255, 255, 255, .55)',\n      margin: '0px'\n    },\n    ' button': {\n      opacity: 0,\n      fontFamily: '\"Nanum Pen Script\", cursive',\n      fontWeight: 'bold',\n      fontSize: '36px',\n      color: 'rgba(255, 255, 255, .8)',\n      backgroundColor: 'transparent',\n      border: 'none',\n      textAlign: 'left',\n      margin: '-10px 16px 0 0',\n      outline: 'none !important'\n    }\n  }),\n  innerClickable: cxs({\n    cursor: 'pointer',\n    ' button': {\n      opacity: 1,\n      cursor: 'pointer',\n    },\n    ':hover': {\n      background: 'linear-gradient(270deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.1) 100%)'\n    },\n    ':hover h3': {\n      color: 'rgba(255, 255, 255, .7)',\n    },\n    ':hover button': {\n      color: 'rgba(255, 255, 255, 1)',\n    }\n  }),\n  glowArrow: cxs({\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: '24px',\n    animation: 'bank-action-arrow-effect 2s ease infinite',\n  })\n}\n\nexport const BankActionButton: React.FC<{\n  clickable: boolean,\n  onClick: () => void,\n  action: BankAction,\n  glowing?: boolean,\n}> = props => {\n\n  return (\n    <div className={styles.container}>\n      <div\n        className={cx(\n          styles.inner,\n          props.clickable && styles.innerClickable,\n        )}\n        onClick={props.clickable ? props.onClick : undefined}\n      >\n        <h3>\n          {(() => {\n            switch (props.action) {\n              case BankAction.Move:\n                return 'Move tile';\n              case BankAction.Recolor:\n                return 'Recolor tile';\n              case BankAction.PlaceInRow:\n                return 'Place tile in row';\n            }\n          })()}\n        </h3>\n        <button>\n          Use action\n        </button>\n        { props.glowing && props.clickable && (\n          <div className={styles.glowArrow}>\n            <FontAwesomeIcon icon={faArrowLeft} />\n          </div>\n        ) }\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useGame } from './GameContainer';\nimport { CustomTile } from './CustomTile';\nimport cxs from 'cxs';\nimport { CurrentAction } from '../types';\nimport { Tile } from './Tile';\nimport { GameStats } from './GameStats';\nimport { BankActionButton } from './BankActionButton';\nimport { tileColors } from '../tileColors';\nimport { useTutorial } from './useTutorial';\n\nconst styles = {\n  container: cxs({\n    pointerEvents: 'none',\n  }),\n  rowContainer: cxs({\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }),\n  statContainer: cxs({\n    height: '65px',\n  })\n}\n\nexport const BankUi: React.FC<{}> = props => {\n  const tutorial = useTutorial();\n  const { game, state } = useGame();\n  const { banks: bankSetup } = state.bankSetup;\n  const { banks: bankState } = state.bankState;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.statContainer}>\n        <GameStats />\n      </div>\n      { bankSetup.map((bank, bankId) => {\n        const isDummyBank = bank.tiles === 0;\n        const bankColor = game.banks.getBank(bankId).color;\n        const borderColor = bankColor !== undefined ? tileColors[bankColor] : undefined;\n        return (\n          <div className={styles.rowContainer}>\n            { isDummyBank && (\n              <CustomTile children=\"\" noContent={true} color={'#fff'} />\n            )}\n            { '_'.repeat(bank.tiles).split('').map((_, tileId) => {\n              if (tileId >= bankState[bankId].count) {\n                if (game.currentAction === CurrentAction.PickingBank && game.bags.arePickedAddableToBank(bankId)) {\n                  return (\n                    <CustomTile\n                      children=\"\"\n                      color={'#c9d4de'}\n                      noContent={true}\n                      border={true}\n                      clickable={true}\n                      // onClick={() => game.perform(Mutations.chooseBank(bankId))}\n                      onClick={() => game.actChooseBank(bankId)}\n                      borderColor={borderColor}\n                      glowing={tutorial?.highlightBanks?.[bankId]?.includes(tileId)}\n                    />\n                  );\n                } else {\n                  return (\n                    <CustomTile children=\"\" color={'#c9d4de'} noContent={true} border={true} borderColor={borderColor} />\n                  );\n                }\n              } else {\n                return (\n                  <Tile color={bankState[bankId].color!} border={true} />\n                );\n              }\n            }) }\n            <div style={{ width: '200px '}}>\n              { !isDummyBank && (\n                <BankActionButton\n                  action={bank.action}\n                  clickable={(\n                    state.currentAction === CurrentAction.ChoosingBankToApply &&\n                    state.bankSetup.banks[bankId].tiles === state.bankState.banks[bankId].count &&\n                    game.banks.isActionAvailableInBank(bankId)\n                  )}\n                  onClick={() => game.actChooseAction(bankId)}\n                  glowing={tutorial?.highlightBankActions?.includes(bankId)}\n                />\n              )}\n            </div>\n          </div>\n        );\n      }) }\n      <div className={styles.statContainer} />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { BagState, CurrentAction } from '../types';\nimport { useGame } from './GameContainer';\nimport { Tile } from './Tile';\nimport { CustomTile } from './CustomTile';\nimport { dummyTileColor } from '../tileColors';\nimport cxs from 'cxs';\nimport cx from 'classnames';\nimport { useTutorial } from './useTutorial';\n\nconst styles = {\n  container: cxs({\n    position: 'relative',\n    width: '240px',\n    minWidth: '240px',\n    height: '240px',\n    minHeight: '240px'\n  }),\n  inner: cxs({\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    padding: '20px 20px',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '170px',\n  }),\n  svg: cxs({\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    ' path': {\n      fill: 'rgba(0, 0, 0, .1)',\n      transition: '.2s fill ease'\n    }\n  }),\n  svgActive: cxs({\n    ' path': {\n      fill: 'rgba(0, 0, 0, .4)'\n    }\n  })\n}\n\nexport const BagUi: React.FC<{\n  bag: BagState,\n  bagId: number,\n}> = props => {\n  const { game, state } = useGame();\n  const tutorial = useTutorial();\n  const bag = props.bag;\n\n  return (\n    <div className={styles.container}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 600 600\"\n        className={cx(\n          styles.svg,\n          (props.bagId === state.currentBag || state.currentBag === 'remainings' )\n          && state.currentAction === CurrentAction.ChoosingFromBag && styles.svgActive\n        )}\n      >\n        <title />\n        <path\n          className=\"cls-1\"\n          d={\n            'M249.5,0C111.7,0,0,111.7,0,249.5S111.7,499,249.5,499,499,387.3,499,249.5,387.3,0,' +\n            '249.5,0ZM271,436C160,436,70,346,70,235S160,34,271,34s201,90,201,201S382,436,271,436Z'\n          }\n        />\n      </svg>\n      <div className={styles.inner}>\n        {\n          bag.tiles.map((tile, tileId) => {\n            if (tile === null) {\n              return (\n                <CustomTile\n                  color={dummyTileColor}\n                />\n              );\n            }\n\n            const clickable = (\n              (\n                state.currentBag === props.bagId ||\n                state.currentBag === 'remainings'\n              ) &&\n              state.currentAction === CurrentAction.ChoosingFromBag &&\n              game.bags.isColorAValidPick(tile)\n            );\n\n            return (\n              <Tile\n                color={tile}\n                clickable={clickable}\n                onClick={() => game.actChooseFromBag(tile)}\n                glowing={clickable && tutorial?.highlightBags?.[props.bagId]?.includes(tileId)}\n              />\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useGame } from './GameContainer';\nimport { BagUi } from './BagUi';\nimport cxs from 'cxs';\nimport { CurrentAction } from '../types';\nimport cx from 'classnames';\n\nconst styles = {\n  container: cxs({\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    marginTop: '0px'\n  }),\n  nextRoundButton: cxs({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontFamily: '\"Nanum Pen Script\", cursive',\n    fontWeight: 'bold',\n    fontSize: '48px',\n    border: 'none',\n    backgroundColor: 'transparent',\n    outline: 'none',\n    color: 'rgba(255, 255, 255, .6)',\n    transition: '.2s all ease',\n    cursor: 'pointer',\n    marginTop: '-30px',\n    ':hover': {\n      color: 'rgba(255, 255, 255, .9)',\n      '> span': {\n        color: 'rgba(255, 255, 255, .6)',\n      }\n    },\n    '> span': {\n      fontSize: '22px',\n      color: 'rgba(255, 255, 255, .4)',\n      transition: '.2s all ease',\n      marginBottom: '-10px',\n      marginLeft: '12px'\n    },\n  }),\n  nextRoundButtonDisabled: cxs({\n    color: 'rgba(255, 255, 255, .2) !important',\n    cursor: 'not-allowed',\n    ':hover': {\n      color: 'rgba(255, 255, 255, .2) !important',\n    },\n    '> span': {\n      color: 'rgba(255, 255, 255, .15) !important',\n    }\n  })\n}\n\nexport const BagsUi: React.FC<{}> = props => {\n  const game = useGame();\n  const bags = game.state.bags;\n\n  return (\n    <div className={styles.container}>\n      { bags.map((bag, idx) => <BagUi bag={bag} key={idx} bagId={idx} />) }\n      <button\n        onClick={() => game.game.forceNextRound()}\n        className={cx(\n          styles.nextRoundButton,\n          game.state.currentAction !== CurrentAction.ChoosingBankToApply && styles.nextRoundButtonDisabled\n        )}\n        disabled={game.state.currentAction !== CurrentAction.ChoosingBankToApply}\n      >\n        <span>skip to</span>\n        Next round\n      </button>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport cxs from 'cxs';\nimport { useTutorial } from './useTutorial';\n\nconst styles = {\n  container: cxs({\n    display: 'flex',\n    alignContent: 'center',\n    justifyContent: 'center',\n    margin: '-20px 0',\n    flexDirection: 'column',\n    height: '200px',\n    overflow: 'auto',\n  }),\n  inner: cxs({\n    transition: '.2s all ease',\n    width: '880px',\n    fontSize: '16px',\n    color: '#d0d0d0'\n  })\n};\n\nexport const Tutorial: React.FC<{}> = props => {\n  const tutorial = useTutorial();\n\n  if (!tutorial) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inner}>\n        { tutorial?.messages?.map(tut => <p key={tut}>{tut}</p>) }\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { BoardUi } from './BoardUi';\nimport { BankUi } from './BankUi';\nimport { BagsUi } from './BagsUi';\nimport cxs from 'cxs';\nimport { Tutorial } from './Tutorial';\n\nconst styles = {\n  container: cxs({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: '100%'\n  }),\n  boardAndBankContainer: cxs({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  })\n}\n\nexport const BoardContainer: React.FC<{}> = props => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.boardAndBankContainer}>\n        <BoardUi />\n        <BankUi />\n      </div>\n      <BagsUi />\n      <Tutorial />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { GameContainer } from './components/GameContainer';\nimport { BoardContainer } from './components/BoardContainer';\nimport './index.css';\nimport { Application } from './components/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}